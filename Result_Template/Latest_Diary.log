ral\addpath.m',86,0)">line 86</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('InitialiseWorkFlow>AddFoldersToPath', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\InitialiseWorkFlow.m', 61)" style="font-weight:bold">InitialiseWorkFlow>AddFoldersToPath</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\InitialiseWorkFlow.m',61,0)">line 61</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('InitialiseWorkFlow', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\InitialiseWorkFlow.m', 23)" style="font-weight:bold">InitialiseWorkFlow</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\InitialiseWorkFlow.m',23,0)">line 23</a>)] 
ExecuteOptimisation('StandardOptim')
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
OPTIMISATION - StandardOptim start
01-Apr-2016 11:38:38
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
INITIALISE OPTIMISATION PROCESS start
01-Apr-2016 11:38:38
--------------------------------------------------------------------------------------------
  
  
-----------------------
INITIAL GRID OPERATIONS start

Calculations Started . . .
***** START GRID INITIALISATION *****

     OUTPUT:Skipped
    ACTION: Starting Grid Generated
     OUTPUT:Skipped
    Mex Output . Grid . . .Edge . . .Vertex . . .Cell . . .done !

    Mex Output . Grid . . .Edge . . .Vertex . . .Cell . . .done !
Reshaping

     OUTPUT:Skipped
Calculations Started . . .
***** START GRID REFINEMENT 1 of 1 *****

     OUTPUT:Skipped
    ACTION: Template Generated
    ACTION: Refinement Targets Identified
    ACTION: Edges Refined
			Start Cell 1 of 16 
			Start Cell 2 of 16 
			Start Cell 3 of 16 
			Start Cell 4 of 16 
			Start Cell 5 of 16 
			Start Cell 6 of 16 
			Start Cell 7 of 16 
			Start Cell 8 of 16 
			Start Cell 9 of 16 
			Start Cell 10 of 16 
			Start Cell 11 of 16 
			Start Cell 12 of 16 
			Start Cell 13 of 16 
			Start Cell 14 of 16 
			Start Cell 15 of 16 
			Start Cell 16 of 16 
    ACTION: Cells Refined
     OUTPUT:SkippedOutput Grid . . .Edge . . .Vertex . . .Cell . . .done !
Connect . . .Edge . . .Cell . . .    Time Elapsed:00:00:00:100
INITIAL GRID OPERATIONS end
-----------------------
  
clc
help fopen
 <strong>fopen</strong>  Open file.
    FID = <strong>fopen</strong>(FILENAME) opens the file FILENAME for read access.
    FILENAME is a string containing the name of the file to be opened.  
    (On PC systems, <strong>fopen</strong> opens files for binary read access.)
 
    FILENAME can be a MATLABPATH relative partial pathname.  If the
    file is not found in the current working directory, <strong>fopen</strong> searches for 
    it on the MATLAB search path.  On UNIX systems, FILENAME may also start
    with a "~/" or a "~username/", which <strong>fopen</strong> expands to the current
    user's home directory or the specified user's home directory,
    respectively.
 
    FID is a scalar MATLAB integer valued double, called a file identifier. 
    You use FID as the first argument to other file input/output
    routines, such as FREAD and FCLOSE. If <strong>fopen</strong> cannot open the file, it 
    returns -1.
 
    FID = <strong>fopen</strong>(FILENAME,PERMISSION) opens the file FILENAME in the
    mode specified by PERMISSION:
    
        'r'     open file for reading
        'w'     open file for writing; discard existing contents
        'a'     open or create file for writing; append data to end of file
        'r+'    open (do not create) file for reading and writing
        'w+'    open or create file for reading and writing; discard 
                existing contents
        'a+'    open or create file for reading and writing; append data 
                to end of file
        'W'     open file for writing without automatic flushing
        'A'     open file for appending without automatic flushing
    
    FILENAME can be a MATLABPATH relative partial pathname only if the file
    is opened for reading.
 
    You can open files in binary mode (the default) or in text mode.
    In binary mode, no characters get singled out for special treatment.
    In text mode on the PC, the carriage return character preceding
    a newline character is deleted on input and added before the newline
    character on output.  To open a file in text mode, append 't' to the
    permission string, for example 'rt' and 'w+t'.  (On Unix, text and
    binary mode are the same, so this has no effect.  On PC systems
    this is critical.)
 
    If the file is opened in update mode ('+'), you must use an FSEEK or 
    FREWIND between an input command like FREAD, FSCANF, FGETS, or FGETL 
    and an output command like FWRITE or FPRINTF.  You must also use an 
    FSEEK or FREWIND between an output command and an input command.
 
    Two file identifiers are automatically available and need not be
    opened.  They are FID=1 (standard output) and FID=2 (standard error).
    
    [FID, MESSAGE] = <strong>fopen</strong>(FILENAME,...) returns a system dependent error 
    message if the open is not successful.
 
    [FID, MESSAGE] = <strong>fopen</strong>(FILENAME,PERMISSION,MACHINEFORMAT) op