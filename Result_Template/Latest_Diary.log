body) (line 219)
            population(ii)=NormalExecutionIteration(population(ii),newRefGrid,newrestartsnake,...

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

Parallel pool using the 'OptimSnakes_Import_56' profile is shutting down.
clc
close all
clear all
ExecuteOptimisation('Desk_CG_inline_out')
  
--------------------------------------------------------------------------------------------
********************************************************************************************
--------------------------------------------------------------------------------------------
OPTIMISATION - Desk_CG_inline_out start
06-Jul-2016 18:54:30
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
INITIALISE OPTIMISATION PROCESS start
06-Jul-2016 18:54:30
--------------------------------------------------------------------------------------------
  
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
  
-----------------------
INITIAL GRID OPERATIONS start

Calculations Started . . .
***** START GRID INITIALISATION *****

     OUTPUT:Skipped
    ACTION: Starting Grid Generated
     OUTPUT:Skipped
    Mex Output . Grid . . .Edge . . .Vertex . . .Cell . . .done !

    Mex Output . Grid . . .Edge . . .Vertex . . .Cell . . .done !
Reshaping

     OUTPUT:Skipped
Calculations Started . . .
***** START GRID REFINEMENT 1 of 1 *****

     OUTPUT:Skipped
    ACTION: Template Generated
    ACTION: Refinement Targets Identified
    ACTION: Edges Refined
			Start Cell 1 of 98 
			Start Cell 2 of 98 
			Start Cell 3 of 98 
			Start Cell 4 of 98 
			Start Cell 5 of 98 
			Start Cell 6 of 98 
			Start Cell 7 of 98 
			Start Cell 8 of 98 
			Start Cell 9 of 98 
			Start Cell 10 of 98 
			Start Cell 11 of 98 
			Start Cell 12 of 98 
			Start Cell 13 of 98 
			Start Cell 14 of 98 
			Start Cell 15 of 98 
			Start Cell 16 of 98 
			Start Cell 17 of 98 
			Start Cell 18 of 98 
			Start Cell 19 of 98 
			Start Cell 20 of 98 
			Start Cell 21 of 98 
			Start Cell 22 of 98 
			Start Cell 23 of 98 
			Start Cell 24 of 98 
			Start Cell 25 of 98 
			Start Cell 26 of 98 
			Start Cell 27 of 98 
			Start Cell 28 of 98 
			Start Cell 29 of 98 
			Start Cell 30 of 98 
			Start Cell 31 of 98 
			Start Cell 32 of 98 
			Start Cell 33 of 98 
			Start Cell 34 of 98 
			Start Cell 35 of 98 
			Start Cell 36 of 98 
			Start Cell 37 of 98 
			Start Cell 38 of 98 
			Start Cell 39 of 98 
			Start Cell 40 of 98 
			Start Cell 41 of 98 
			Start Cell 42 of 98 
			Start Cell 43 of 98 
			Start Cell 44 of 98 
			Start Cell 45 of 98 
			Start Cell 46 of 98 
			Start Cell 47 of 98 
			Start Cell 48 of 98 
			Start Cell 49 of 98 
			Start Cell 50 of 98 
			Start Cell 51 of 98 
			Start Cell 52 of 98 
			Start Cell 53 of 98 
			Start Cell 54 of 98 
			Start Cell 55 of 98 
			Start Cell 56 of 98 
			Start Cell 57 of 98 
			Start Cell 58 of 98 
			Start Cell 59 of 98 
			Start Cell 60 of 98 
			Start Cell 61 of 98 
			Start Cell 62 of 98 
			Start Cell 63 of 98 
			Start Cell 64 of 98 
			Start Cell 65 of 98 
			Start Cell 66 of 98 
			Start Cell 67 of 98 
			Start Cell 68 of 98 
			Start Cell 69 of 98 
			Start Cell 70 of 98 
			Start Cell 71 of 98 
			Start Cell 72 of 98 
			Start Cell 73 of 98 
			Start Cell 74 of 98 
			Start Cell 75 of 98 
			Start Cell 76 of 98 
			Start Cell 77 of 98 
			Start Cell 78 of 98 
			Start Cell 79 of 98 
			Start Cell 80 of 98 
			Start Cell 81 of 98 
			Start Cell 82 of 98 
			Start Cell 83 of 98 
			Start Cell 84 of 98 
			Start Cell 85 of 98 
			Start Cell 86 of 98 
			Start Cell 87 of 98 
			Start Cell 88 of 98 
			Start Cell 89 of 98 
			Start Cell 90 of 98 
			Start Cell 91 of 98 
			Start Cell 92 of 98 
			Start Cell 93 of 98 
			Start Cell 94 of 98 
			Start Cell 95 of 98 
			Start Cell 96 of 98 
			Start Cell 97 of 98 
			Start Cell 98 of 98 
    ACTION: Cells Refined
     OUTPUT:SkippedOutput Grid . . .Edge . . .Vertex . . .Cell . . .done !
Connect . . .Edge . . .Cell . . .    Time Elapsed:00:00:01:121
INITIAL GRID OPERATIONS end
-----------------------
  
Starting parallel pool (parpool) using the 'OptimSnakes_Import_57' profile ... connected to 4 workers.

ans = 

 <a href="matlab: help parallel.Pool">Pool</a> with properties: 

            Connected: true
           NumWorkers: 4
              Cluster: <a href="matlab: parallel.internal.display.Displayer.displayObjectptimSnakes_Import_57</a>
        AttachedFiles: ...ctive_Build\Optimisation\Parallel\taskStartup.m
          IdleTimeout: Inf (no automatic shut down)
          SpmdEnabled: true

  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:075
  Start Time Stepping
  20 Steps Performed
  Iteration Time:00:00:20:607
  Volume converged to 1.06436e-02
Time Elapsed:00:00:31:166
SNAKE PROCESS end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:00:01:12:021
INITIALISE OPTIMISATION PROCESS end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 1 start
06-Jul-2016 18:55:42
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:347
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:59:117
  Volume converged to 1.34974e-10
Time Elapsed:00:03:07:716
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:402
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:59:154
  Volume converged to 1.02758e-10
Time Elapsed:00:03:07:818
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:452
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:59:427
  Volume converged to 9.74099e-11
Time Elapsed:00:03:08:051
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:428
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:59:308
  Volume converged to 1.02758e-10
Time Elapsed:00:03:07:915
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:13:389
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:13:159
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:14:040
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:13:755
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:554
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:664
  Volume converged to 2.03852e-10
Time Elapsed:00:03:02:228
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:116
  Volume converged to 9.34851e-10
Time Elapsed:00:03:02:416
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:616
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:320
  Volume converged to 2.31149e-10
Time Elapsed:00:03:01:760
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:492
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:507
  Volume converged to 1.53443e-10
Time Elapsed:00:03:01:838
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:121
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:757
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:195
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:475
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:843
  Volume converged to 2.38187e-10
Time Elapsed:00:03:07:485
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:148
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:359
  Volume converged to 9.73492e-11
Time Elapsed:00:03:06:487
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:569
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:703
  Volume converged to 2.31149e-10
Time Elapsed:00:03:07:361
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:609
  Volume converged to 2.03852e-10
Time Elapsed:00:03:07:158
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:086
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:992
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:379
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:147
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:899
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:177
  Volume converged to 1.04386e-10
Time Elapsed:00:03:02:899
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:195
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:660
  Volume converged to 2.15222e-10
Time Elapsed:00:03:03:616
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:022
  Volume converged to 1.02758e-10
Time Elapsed:00:03:02:337
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:367
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:785
  Volume converged to 9.73492e-11
Time Elapsed:00:03:04:210
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:399
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:441
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:675
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:830
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:961
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:740
  Volume converged to 1.04386e-10
Time Elapsed:00:03:02:509
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:226
  Volume converged to 2.15222e-10
Time Elapsed:00:03:02:493
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:336
  Volume converged to 1.53443e-10
Time Elapsed:00:03:01:635
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:005
  Volume converged to 9.34851e-10
Time Elapsed:00:03:03:227
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:806
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:459
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:052
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:613
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:664
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:616
  Volume converged to 2.38187e-10
Time Elapsed:00:03:02:026
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:163
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:694
  Volume converged to 1.37665e-10
Time Elapsed:00:03:02:743
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:271
  Volume converged to 2.38187e-10
Time Elapsed:00:03:03:507
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:335
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:322
  Volume converged to 9.74099e-11
Time Elapsed:00:03:00:434
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:035
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:437
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:56:376
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:137
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:914
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:817
  Volume converged to 1.53443e-10
Time Elapsed:00:03:03:460
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:414
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:273
  Volume converged to 1.37665e-10
Time Elapsed:00:03:01:511
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:100
  Volume converged to 9.73488e-11
Time Elapsed:00:03:02:088
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:647
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:551
  Volume converged to 1.04386e-10
Time Elapsed:00:03:04:100
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:313
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:593
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:56:673
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:373
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:914
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:770
  Volume converged to 1.02758e-10
Time Elapsed:00:03:03:617
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:289
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:535
  Volume converged to 2.15222e-10
Time Elapsed:00:03:03:647
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:161
  Volume converged to 2.03758e-10
Time Elapsed:00:03:03:258
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:428
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:519
  Volume converged to 1.04386e-10
Time Elapsed:00:03:04:865
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:571
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:49:994
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:600
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:600
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:851
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:999
  Volume converged to 2.03852e-10
Time Elapsed:00:03:03:845
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:706
  Volume converged to 2.15222e-10
Time Elapsed:00:03:01:787
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:023
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:154
  Volume converged to 2.95726e-10
Time Elapsed:00:03:04:891
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:210
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:064
  Volume converged to 2.38187e-10
Time Elapsed:00:03:03:160
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:513
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:525
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:835
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:634
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:774
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:784
  Volume converged to 2.31149e-10
Time Elapsed:00:03:02:663
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:992
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:348
  Volume converged to 2.31149e-10
Time Elapsed:00:03:02:195
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:054
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:988
  Volume converged to 1.35235e-10
Time Elapsed:00:03:03:006
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:242
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:109
  Volume converged to 1.53443e-10
Time Elapsed:00:03:05:221
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:963
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:511
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:903
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:922
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:977
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:678
  Volume converged to 1.37673e-10
Time Elapsed:00:03:01:619
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:381
  Volume converged to 2.03852e-10
Time Elapsed:00:03:02:664
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:163
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:556
  Volume converged to 1.35235e-10
Time Elapsed:00:03:00:589
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:210
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:397
  Volume converged to 1.34974e-10
Time Elapsed:00:03:02:399
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:01:07:285
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:868
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:44:444
  Volume converged to 1.34974e-10
Time Elapsed:00:02:52:057
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:443
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:734
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:740
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:742
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:480
  Volume converged to 9.74099e-11
Time Elapsed:00:02:59:093
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:007
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:121
  Volume converged to 9.73492e-11
Time Elapsed:00:02:59:155
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:180
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:855
  Volume converged to 1.35235e-10
Time Elapsed:00:02:58:828
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:712
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:836
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:45:286
  Volume converged to 2.03758e-10
Time Elapsed:00:02:52:837
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:459
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:916
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:725
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:898
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:49:608
  Volume converged to 9.73488e-11
Time Elapsed:00:02:57:329
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:055
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:855
  Volume converged to 9.34851e-10
Time Elapsed:00:02:58:703
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:008
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:262
  Volume converged to 1.35235e-10
Time Elapsed:00:02:57:985
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:662
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:883
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:39:389
  Volume converged to 9.73488e-11
Time Elapsed:00:02:47:050
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:293
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:507
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:256
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:008
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:884
  Volume converged to 2.03758e-10
Time Elapsed:00:03:00:918
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:027
  Volume converged to 9.34851e-10
Time Elapsed:00:02:59:357
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:756
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:074
  Volume converged to 2.95726e-10
Time Elapsed:00:02:59:686
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:028
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:007
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:42:525
  Volume converged to 9.73488e-11
Time Elapsed:00:02:50:310
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:47:156
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:121
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:212
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:774
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:35:348
  Volume converged to 1.34974e-10
Time Elapsed:00:02:42:588
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:961
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:32:884
  Volume converged to 9.73492e-11
Time Elapsed:00:02:40:481
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:26:174
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:665
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:28:765
  Volume converged to 9.74099e-11
Time Elapsed:00:02:35:911
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:15:066
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:13:257
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:353
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:14:179
  Volume converged to 2.03758e-10
Time Elapsed:00:02:20:903
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:45:925
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:34:630
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:031
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:02:06:00:468
ITERATION 1 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 2 start
06-Jul-2016 21:01:42
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:554
  Start Time Stepping
  103 Steps Performed
  Iteration Time:00:01:58:625
  Volume converged to 1.30890e-10
Time Elapsed:00:02:06:940
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  121 Steps Performed
  Iteration Time:00:02:21:340
  Volume converged to 1.58561e-10
Time Elapsed:00:02:29:764
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:445
  Start Time Stepping
  139 Steps Performed
  Iteration Time:00:02:40:466
  Volume converged to 1.19723e-11
Time Elapsed:00:02:48:656
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:553
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:806
  Volume converged to 8.32002e-11
Time Elapsed:00:03:01:121
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:881
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:510
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:697
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:818
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:836
  Start Time Stepping
  117 Steps Performed
  Iteration Time:00:02:13:883
  Volume converged to 5.10736e-11
Time Elapsed:00:02:21:589
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:085
  Start Time Stepping
  132 Steps Performed
  Iteration Time:00:02:30:279
  Volume converged to 4.73797e-11
Time Elapsed:00:02:38:204
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  137 Steps Performed
  Iteration Time:00:02:35:646
  Volume converged to 3.66867e-11
Time Elapsed:00:02:43:617
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:320
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:341
  Volume converged to 1.37673e-10
Time Elapsed:00:02:58:531
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:041
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:974
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:968
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:732
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:820
  Start Time Stepping
  98 Steps Performed
  Iteration Time:00:01:48:610
  Volume converged to 2.52883e-10
Time Elapsed:00:01:56:364
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:883
  Start Time Stepping
  86 Steps Performed
  Iteration Time:00:01:38:360
  Volume converged to 1.52911e-09
Time Elapsed:00:01:45:974
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  78 Steps Performed
  Iteration Time:00:01:29:671
  Volume converged to 1.18033e-09
Time Elapsed:00:01:38:080
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:320
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:03:01:589
  Volume converged to 1.12877e-04
Time Elapsed:00:03:09:747
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:343
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:504
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:49:933
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:34:926
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:016
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:00:23:38:950
ITERATION 2 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 3 start
06-Jul-2016 21:25:21
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:193
  Volume converged to 2.66724e-10
Time Elapsed:00:02:03:445
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:241
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:222
  Volume converged to 2.65978e-10
Time Elapsed:00:02:05:287
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:861
  Volume converged to 2.66768e-10
Time Elapsed:00:02:05:895
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:877
  Volume converged to 2.78039e-10
Time Elapsed:00:02:06:208
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:45:799
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:49:294
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:666
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:133
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:805
  Start Time Stepping
  94 Steps Performed
  Iteration Time:00:01:49:281
  Volume converged to 2.70825e-10
Time Elapsed:00:01:56:894
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:315
  Volume converged to 2.66713e-10
Time Elapsed:00:02:05:552
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:550
  Volume converged to 2.65870e-10
Time Elapsed:00:02:04:944
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:413
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:911
  Volume converged to 2.67193e-10
Time Elapsed:00:02:04:616
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:511
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:135
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:584
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:225
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:790
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:112
  Volume converged to 2.69831e-10
Time Elapsed:00:02:04:725
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:101
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:613
  Volume converged to 2.66725e-10
Time Elapsed:00:02:04:538
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:523
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:207
  Volume converged to 2.71059e-10
Time Elapsed:00:02:04:600
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:753
  Volume converged to 2.65291e-10
Time Elapsed:00:02:05:052
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:019
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:830
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:898
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:879
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:961
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:54:726
  Volume converged to 2.65549e-10
Time Elapsed:00:02:02:620
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:366
  Start Time Stepping
  94 Steps Performed
  Iteration Time:00:01:48:376
  Volume converged to 2.71558e-10
Time Elapsed:00:01:56:645
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:632
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:599
  Volume converged to 2.66924e-10
Time Elapsed:00:02:03:991
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:445
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:114
  Volume converged to 2.65885e-10
Time Elapsed:00:02:04:273
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:477
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:197
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:120
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:885
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:537
  Volume converged to 2.66724e-10
Time Elapsed:00:02:03:493
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:054
  Start Time Stepping
  116 Steps Performed
  Iteration Time:00:02:14:101
  Volume converged to 2.07477e-10
Time Elapsed:00:02:22:011
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:409
  Volume converged to 2.66668e-10
Time Elapsed:00:02:05:864
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:833
  Volume converged to 2.67569e-10
Time Elapsed:00:02:03:945
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:43:584
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:45:877
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:48:061
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:48:389
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:758
  Start Time Stepping
  94 Steps Performed
  Iteration Time:00:01:48:454
  Volume converged to 2.73059e-10
Time Elapsed:00:01:56:223
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:211
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:973
  Volume converged to 2.67284e-10
Time Elapsed:00:02:04:148
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:413
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:114
  Volume converged to 2.66756e-10
Time Elapsed:00:02:04:585
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:445
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:613
  Volume converged to 2.66787e-10
Time Elapsed:00:02:04:897
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:45:128
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:46:798
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:45:752
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:47:531
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:929
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:521
  Volume converged to 2.66724e-10
Time Elapsed:00:02:03:384
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:133
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:786
  Volume converged to 2.69764e-10
Time Elapsed:00:02:03:836
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:319
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:942
  Volume converged to 2.66718e-10
Time Elapsed:00:02:04:211
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:289
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:54:943
  Volume converged to 2.66724e-10
Time Elapsed:00:02:03:477
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:695
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:149
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:117
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:384
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:992
  Start Time Stepping
  100 Steps Performed
  Iteration Time:00:01:56:349
  Volume converged to 3.07024e-10
Time Elapsed:00:02:04:321
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:898
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:242
  Volume converged to 2.66444e-10
Time Elapsed:00:02:03:057
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:632
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:304
  Volume converged to 2.66742e-10
Time Elapsed:00:02:03:900
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:397
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:772
  Volume converged to 2.66724e-10
Time Elapsed:00:02:04:274
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:48:142
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:48:049
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:45:864
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:47:565
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:789
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:304
  Volume converged to 2.66714e-10
Time Elapsed:00:02:02:791
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:58:314
  Volume converged to 2.66752e-10
Time Elapsed:00:02:06:380
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:600
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:569
  Volume converged to 2.66724e-10
Time Elapsed:00:02:04:242
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:300
  Volume converged to 2.66724e-10
Time Elapsed:00:02:05:459
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:543
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:077
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:059
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:263
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:696
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:190
  Volume converged to 2.54330e-10
Time Elapsed:00:02:04:678
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:148
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:925
  Volume converged to 2.66724e-10
Time Elapsed:00:02:04:818
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:305
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:644
  Volume converged to 2.66701e-10
Time Elapsed:00:02:04:663
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  100 Steps Performed
  Iteration Time:00:01:55:053
  Volume converged to 3.02362e-10
Time Elapsed:00:02:03:493
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:49:887
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:49:169
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:49:808
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:49:808
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:490
  Volume converged to 2.69459e-10
Time Elapsed:00:02:03:414
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:195
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:895
  Volume converged to 2.66724e-10
Time Elapsed:00:02:03:820
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:398
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:471
  Volume converged to 2.66713e-10
Time Elapsed:00:02:05:801
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:254
  Volume converged to 2.66724e-10
Time Elapsed:00:02:04:569
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:215
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:48:763
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:51:712
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:024
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:039
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:098
  Volume converged to 2.66736e-10
Time Elapsed:00:02:03:929
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:789
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:026
  Volume converged to 2.67754e-10
Time Elapsed:00:02:04:768
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:101
  Start Time Stepping
  98 Steps Performed
  Iteration Time:00:01:53:123
  Volume converged to 3.06116e-09
Time Elapsed:00:02:01:118
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:988
  Volume converged to 2.76938e-10
Time Elapsed:00:02:04:815
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
    Time Elapsed:00:04:36:911
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
    Time Elapsed:00:04:35:385
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
    Time Elapsed:00:04:33:981
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
    Time Elapsed:00:04:37:304
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:945
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:816
  Volume converged to 2.66711e-10
Time Elapsed:00:02:04:647
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:58:173
  Volume converged to 2.66674e-10
Time Elapsed:00:02:06:207
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:101
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:362
  Volume converged to 2.66724e-10
Time Elapsed:00:02:05:364
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:319
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:925
  Volume converged to 2.63890e-10
Time Elapsed:00:02:04:975
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:258
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:325
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:476
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:498
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:210
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:59:843
  Volume converged to 2.66725e-10
Time Elapsed:00:02:08:048
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:366
  Start Time Stepping
  94 Steps Performed
  Iteration Time:00:01:51:808
  Volume converged to 2.71511e-10
Time Elapsed:00:01:59:983
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:59:078
  Volume converged to 2.65735e-10
Time Elapsed:00:02:07:206
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:569
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:57:487
  Volume converged to 2.67457e-10
Time Elapsed:00:02:05:957
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:52:586
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:880
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:752
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:286
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:805
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:50:575
  Volume converged to 2.67849e-10
Time Elapsed:00:01:57:954
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:132
  Start Time Stepping
  94 Steps Performed
  Iteration Time:00:01:43:337
  Volume converged to 2.71992e-10
Time Elapsed:00:01:51:075
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:242
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:49:811
  Volume converged to 2.66653e-10
Time Elapsed:00:01:57:564
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:04:006
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:04:521
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:04:162
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:539
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:32:121
  Volume converged to 2.65743e-10
Time Elapsed:00:01:39:016
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:649
  Start Time Stepping
  94 Steps Performed
  Iteration Time:00:01:25:054
  Volume converged to 2.64813e-10
Time Elapsed:00:01:32:105
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:37:048
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:37:173
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:016
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:01:49:15:111
ITERATION 3 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 4 start
06-Jul-2016 23:14:36
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:367
  Start Time Stepping
  94 Steps Performed
  Iteration Time:00:01:47:221
  Volume converged to 2.23214e-10
Time Elapsed:00:01:55:553
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:601
  Start Time Stepping
  95 Steps Performed
  Iteration Time:00:01:49:499
  Volume converged to 1.91606e-10
Time Elapsed:00:01:57:970
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:663
  Start Time Stepping
  97 Steps Performed
  Iteration Time:00:01:51:621
  Volume converged to 2.01938e-10
Time Elapsed:00:02:00:217
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:413
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:56:036
  Volume converged to 2.73375e-10
Time Elapsed:00:02:04:554
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:233
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:072
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:964
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:867
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  98 Steps Performed
  Iteration Time:00:01:52:260
  Volume converged to 1.41493e-10
Time Elapsed:00:02:00:232
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:883
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:54:835
  Volume converged to 2.80040e-10
Time Elapsed:00:02:02:588
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:179
  Start Time Stepping
  100 Steps Performed
  Iteration Time:00:01:55:053
  Volume converged to 2.39741e-10
Time Elapsed:00:02:03:056
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:366
  Start Time Stepping
  101 Steps Performed
  Iteration Time:00:01:55:194
  Volume converged to 2.66724e-10
Time Elapsed:00:02:03:305
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:56:096
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:955
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:247
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:186
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:133
  Start Time Stepping
  84 Steps Performed
  Iteration Time:00:01:37:565
  Volume converged to 7.87303e-10
Time Elapsed:00:01:45:646
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  81 Steps Performed
  Iteration Time:00:01:33:103
  Volume converged to 1.43500e-10
Time Elapsed:00:01:41:091
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:867
  Start Time Stepping
  108 Steps Performed
  Iteration Time:00:02:02:744
  Volume converged to 9.82372e-11
Time Elapsed:00:02:10:294
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:227
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:075
  Volume converged to 4.07137e-06
Time Elapsed:00:02:58:017
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:285
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:381
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:885
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:35:861
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:032
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:00:21:59:201
ITERATION 4 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 5 start
06-Jul-2016 23:36:36
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:647
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:883
  Volume converged to 2.56066e-06
Time Elapsed:00:03:01:386
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:350
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:569
  Volume converged to 2.56134e-06
Time Elapsed:00:03:02:899
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:116
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:369
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:817
  Volume converged to 2.56066e-06
Time Elapsed:00:03:04:210
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:20:277
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:21:602
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:22:211
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:22:585
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:261
  Volume converged to 2.56066e-06
Time Elapsed:00:02:59:638
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:823
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:091
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:413
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:948
  Volume converged to 2.55820e-06
Time Elapsed:00:03:00:138
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:101
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:121
  Volume converged to 2.56066e-06
Time Elapsed:00:02:59:218
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:197
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:671
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:080
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:752
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:226
  Volume converged to 2.56942e-06
Time Elapsed:00:03:02:493
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:493
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:902
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:633
  Volume converged to 2.56066e-06
Time Elapsed:00:03:01:917
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:821
  Volume converged to 2.56066e-06
Time Elapsed:00:03:01:136
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:735
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:921
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:541
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:12:663
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:993
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:613
  Volume converged to 2.56066e-06
Time Elapsed:00:03:03:507
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:288
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:881
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:962
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:288
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:443
  Volume converged to 2.56066e-06
Time Elapsed:00:03:03:492
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:598
  Volume converged to 2.56066e-06
Time Elapsed:00:03:04:053
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:869
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:735
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:114
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:671
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:961
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:931
  Volume converged to 1.07256e-05
Time Elapsed:00:03:00:809
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:086
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:903
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:523
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:928
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:229
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:569
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:664
  Volume converged to 2.56066e-06
Time Elapsed:00:03:01:978
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:191
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:231
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:884
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:955
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:054
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:617
  Volume converged to 2.56066e-06
Time Elapsed:00:03:01:635
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:915
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:195
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:793
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:301
  Volume converged to 2.56066e-06
Time Elapsed:00:03:03:835
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:335
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:851
  Volume converged to 2.56066e-06
Time Elapsed:00:03:01:869
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:082
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:829
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:765
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:607
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:509
  Volume converged to 2.56065e-06
Time Elapsed:00:03:00:450
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:007
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:538
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:462
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:600
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:993
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:492
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:913
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:275
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:283
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:292
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:805
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:181
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:899
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:768
  Volume converged to 2.56066e-06
Time Elapsed:00:02:59:553
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:977
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:124
  Volume converged to 2.56064e-06
Time Elapsed:00:03:01:143
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:210
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:282
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:191
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:414
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:156
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:457
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:210
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:843
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:066
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:827
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:774
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:150
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:935
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:008
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:134
  Volume converged to 2.56071e-06
Time Elapsed:00:03:00:919
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:335
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:196
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:323
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:367
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:977
  Volume converged to 2.56066e-06
Time Elapsed:00:03:02:198
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:810
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:840
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:179
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:186
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:258
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:707
  Volume converged to 2.56066e-06
Time Elapsed:00:03:03:913
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:525
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:778
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:679
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:880
  Volume converged to 2.56047e-06
Time Elapsed:00:03:03:351
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:369
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:559
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:977
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:761
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:840
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:360
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:930
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:49:483
  Volume converged to 2.56066e-06
Time Elapsed:00:02:57:345
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:573
  Volume converged to 2.56066e-06
Time Elapsed:00:02:59:717
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:211
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:883
  Volume converged to 2.55216e-06
Time Elapsed:00:03:01:012
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:336
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:838
  Volume converged to 2.56066e-06
Time Elapsed:00:02:59:920
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:578
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:596
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:658
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:281
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:898
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:48:157
  Volume converged to 2.56085e-06
Time Elapsed:00:02:55:817
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:054
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:591
  Volume converged to 2.56066e-06
Time Elapsed:00:02:58:562
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:871
  Volume converged to 2.56067e-06
Time Elapsed:00:02:58:859
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:054
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:544
  Volume converged to 2.56066e-06
Time Elapsed:00:02:58:609
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:150
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:005
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:377
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:327
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  84 Steps Performed
  Iteration Time:00:01:37:066
  Volume converged to 6.48467e-10
Time Elapsed:00:01:45:303
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:085
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:308
  Volume converged to 2.55998e-06
Time Elapsed:00:02:59:280
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:976
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:462
  Volume converged to 2.56066e-06
Time Elapsed:00:03:00:263
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:074
  Volume converged to 2.56061e-06
Time Elapsed:00:02:59:280
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:014
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:613
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:545
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:677
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:101
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:49:873
  Volume converged to 2.56066e-06
Time Elapsed:00:02:57:798
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:007
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:918
  Volume converged to 2.56314e-06
Time Elapsed:00:02:58:640
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:086
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:932
  Volume converged to 2.56066e-06
Time Elapsed:00:02:59:685
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:105
  Volume converged to 2.56066e-06
Time Elapsed:00:02:59:483
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:000
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:545
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:761
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:602
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:055
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:42:135
  Volume converged to 2.56066e-06
Time Elapsed:00:02:49:935
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:42:104
  Volume converged to 2.56066e-06
Time Elapsed:00:02:49:951
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:633
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:36:987
  Volume converged to 2.56065e-06
Time Elapsed:00:02:44:194
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:21:385
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:23:881
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:20:168
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:228
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:19:951
  Volume converged to 2.56066e-06
Time Elapsed:00:02:26:519
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:712
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:17:205
  Volume converged to 2.56066e-06
Time Elapsed:00:02:24:226
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:38:655
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:43:616
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:031
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:02:07:56:900
ITERATION 5 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 6 start
07-Jul-2016 01:44:32
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  84 Steps Performed
  Iteration Time:00:01:37:814
  Volume converged to 6.75801e-10
Time Elapsed:00:01:45:834
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:241
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:399
  Volume converged to 5.12777e-06
Time Elapsed:00:03:01:323
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:445
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:133
  Volume converged to 9.26740e-06
Time Elapsed:00:03:01:604
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:285
  Volume converged to 1.63188e-04
Time Elapsed:00:03:04:350
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:186
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:277
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:323
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:570
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:805
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:47:626
  Volume converged to 1.07161e-05
Time Elapsed:00:02:55:208
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:491
  Start Time Stepping
  96 Steps Performed
  Iteration Time:00:01:52:089
  Volume converged to 2.69799e-09
Time Elapsed:00:02:00:560
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:148
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:185
  Volume converged to 2.56066e-06
Time Elapsed:00:02:58:078
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:335
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:667
  Volume converged to 1.26148e-05
Time Elapsed:00:02:59:592
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:50:230
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:54:707
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:56:314
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:175
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:915
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:49:841
  Volume converged to 7.93854e-05
Time Elapsed:00:02:57:657
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:914
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:400
  Volume converged to 5.08906e-05
Time Elapsed:00:03:00:076
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:178
  Volume converged to 7.62062e-05
Time Elapsed:00:03:02:182
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:523
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:302
  Volume converged to 5.56392e-06
Time Elapsed:00:03:03:648
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:250
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:900
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:47:188
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:46:018
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:000
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:00:24:06:313
ITERATION 6 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 7 start
07-Jul-2016 02:08:39
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:491
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:774
  Volume converged to 1.07743e-05
Time Elapsed:00:03:01:152
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:275
  Volume converged to 1.07782e-05
Time Elapsed:00:03:00:699
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:741
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:118
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:698
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:522
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:009
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:479
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:657
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:713
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:510
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:11:150
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:039
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:569
  Volume converged to 1.03268e-05
Time Elapsed:00:03:02:446
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:335
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:492
  Volume converged to 1.07849e-05
Time Elapsed:00:03:01:713
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:554
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:458
  Volume converged to 1.07766e-05
Time Elapsed:00:03:03:913
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:554
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:458
  Volume converged to 1.03268e-05
Time Elapsed:00:03:03:851
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:929
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:260
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:648
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:379
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:117
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:461
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:292
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:021
  Volume converged to 1.03018e-05
Time Elapsed:00:03:03:429
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:413
  Volume converged to 1.03268e-05
Time Elapsed:00:03:02:587
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:211
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:665
  Volume converged to 1.07766e-05
Time Elapsed:00:03:00:653
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:165
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:852
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:025
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:799
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:976
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:163
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:963
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:664
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:573
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:114
  Volume converged to 1.07766e-05
Time Elapsed:00:03:03:039
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:226
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:461
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:729
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:006
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:118
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:013
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:369
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:055
  Start Time Stepping
  84 Steps Performed
  Iteration Time:00:01:38:361
  Volume converged to 6.77425e-10
Time Elapsed:00:01:46:255
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:851
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:541
  Volume converged to 1.07766e-05
Time Elapsed:00:03:00:403
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:801
  Volume converged to 1.07766e-05
Time Elapsed:00:03:04:194
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:444
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:619
  Volume converged to 1.07766e-05
Time Elapsed:00:03:00:918
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:473
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:138
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:267
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:170
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:993
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:48:350
  Volume converged to 1.07766e-05
Time Elapsed:00:02:56:166
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:055
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:795
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:736
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:445
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:517
  Volume converged to 1.07766e-05
Time Elapsed:00:02:59:646
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:288
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:264
  Volume converged to 1.07766e-05
Time Elapsed:00:03:02:469
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:395
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:107
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:878
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:455
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:008
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:48:984
  Volume converged to 1.07492e-05
Time Elapsed:00:02:56:848
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:930
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:448
  Volume converged to 1.07766e-05
Time Elapsed:00:02:59:279
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:182
  Volume converged to 1.07767e-05
Time Elapsed:00:03:00:200
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:553
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:260
  Volume converged to 1.07766e-05
Time Elapsed:00:03:00:449
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:841
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:56:174
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:492
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:137
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:977
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:49:186
  Volume converged to 1.07766e-05
Time Elapsed:00:02:57:018
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:195
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:776
  Volume converged to 1.07761e-05
Time Elapsed:00:02:59:857
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:242
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:553
  Volume converged to 1.03268e-05
Time Elapsed:00:03:02:680
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:180
  Volume converged to 1.07765e-05
Time Elapsed:00:03:01:355
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:56:392
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:275
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:993
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:197
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:085
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:154
  Volume converged to 1.04256e-05
Time Elapsed:00:02:58:031
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:148
  Start Time Stepping
  84 Steps Performed
  Iteration Time:00:01:37:924
  Volume converged to 7.57605e-10
Time Elapsed:00:01:45:942
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:398
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:824
  Volume converged to 1.07764e-05
Time Elapsed:00:02:58:967
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:49:716
  Volume converged to 1.07770e-05
Time Elapsed:00:02:58:094
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:076
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:277
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:606
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:275
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:039
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:400
  Volume converged to 1.07766e-05
Time Elapsed:00:03:00:403
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:101
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:232
  Volume converged to 1.07766e-05
Time Elapsed:00:02:58:141
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:195
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:496
  Volume converged to 1.07772e-05
Time Elapsed:00:02:59:467
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:117
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:292
  Volume converged to 1.07750e-05
Time Elapsed:00:02:59:249
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:512
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:077
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:025
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:451
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:789
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:559
  Volume converged to 1.07766e-05
Time Elapsed:00:02:58:094
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:977
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:214
  Volume converged to 1.07721e-05
Time Elapsed:00:02:59:062
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:350
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:622
  Volume converged to 1.08071e-05
Time Elapsed:00:02:58:952
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:476
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:431
  Volume converged to 1.03268e-05
Time Elapsed:00:03:00:809
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:56:424
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:53:896
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:344
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:55:752
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:836
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:49:311
  Volume converged to 1.07760e-05
Time Elapsed:00:02:57:065
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:116
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:496
  Volume converged to 1.03268e-05
Time Elapsed:00:02:59:343
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:397
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:48:063
  Volume converged to 1.07766e-05
Time Elapsed:00:02:56:113
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:601
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:185
  Volume converged to 1.03267e-05
Time Elapsed:00:02:58:640
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:281
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:479
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:028
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:961
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:055
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:50:154
  Volume converged to 1.07789e-05
Time Elapsed:00:02:57:954
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:085
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:182
  Volume converged to 1.03268e-05
Time Elapsed:00:03:00:231
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:179
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:182
  Volume converged to 2.59201e-06
Time Elapsed:00:03:00:247
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:853
  Volume converged to 1.07768e-05
Time Elapsed:00:03:00:933
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:224
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:038
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:654
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:759
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:167
  Volume converged to 1.07685e-05
Time Elapsed:00:02:59:265
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:148
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:963
  Volume converged to 1.07766e-05
Time Elapsed:00:03:00:107
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:024
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:523
  Volume converged to 1.07766e-05
Time Elapsed:00:03:01:417
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:491
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:569
  Volume converged to 1.07766e-05
Time Elapsed:00:03:03:305
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:125
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:11:275
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:476
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:317
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:054
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:44:834
  Volume converged to 1.03268e-05
Time Elapsed:00:02:52:493
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:930
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:42:197
  Volume converged to 1.07766e-05
Time Elapsed:00:02:49:779
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:836
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:35:520
  Volume converged to 1.07766e-05
Time Elapsed:00:02:42:961
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:15:316
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:16:923
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:14:958
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:508
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:24:585
  Volume converged to 1.07766e-05
Time Elapsed:00:02:31:355
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:179
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:21:340
  Volume converged to 1.07766e-05
Time Elapsed:00:02:28:984
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:38:436
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:38:297
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:015
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:02:05:55:991
ITERATION 7 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 8 start
07-Jul-2016 04:14:35
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:835
  Volume converged to 1.07405e-05
Time Elapsed:00:03:02:181
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:117
  Volume converged to 3.43443e-05
Time Elapsed:00:03:01:480
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:336
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:241
  Volume converged to 1.07675e-05
Time Elapsed:00:03:02:291
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:601
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:192
  Volume converged to 3.17201e-05
Time Elapsed:00:03:03:679
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:730
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:478
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:847
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:749
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:055
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:790
  Volume converged to 3.46155e-05
Time Elapsed:00:03:00:683
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:071
  Volume converged to 3.38076e-05
Time Elapsed:00:03:01:198
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:117
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:334
  Volume converged to 1.03268e-05
Time Elapsed:00:03:02:322
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:335
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:023
  Volume converged to 1.07585e-05
Time Elapsed:00:03:02:197
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:58:171
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:867
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:791
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:162
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:851
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:116
  Volume converged to 8.11302e-05
Time Elapsed:00:03:01:854
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:211
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:144
  Volume converged to 1.03891e-05
Time Elapsed:00:03:04:147
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:133
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:03:00:106
  Volume converged to 4.71812e-06
Time Elapsed:00:03:08:188
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:03:05:302
  Volume converged to 1.94836e-05
Time Elapsed:00:03:13:695
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:01:13:477
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:27:640
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:26:471
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:31:416
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:016
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:00:24:18:014
ITERATION 8 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 9 start
07-Jul-2016 04:38:53
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:632
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:693
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:164
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:146
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:336
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:710
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:193
  Volume converged to 3.26248e-05
Time Elapsed:00:03:03:866
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:284
  Volume converged to 3.26318e-05
Time Elapsed:00:03:04:756
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:621
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:872
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:11:353
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:13:724
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:226
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:916
  Volume converged to 3.26318e-05
Time Elapsed:00:02:59:935
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:132
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:147
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:009
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:554
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:710
  Volume converged to 3.26578e-05
Time Elapsed:00:03:02:025
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:663
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:601
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:197
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:010
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:333
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:208
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:627
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:019
  Volume converged to 3.26318e-05
Time Elapsed:00:03:04:210
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:710
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:802
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:305
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:697
  Volume converged to 3.26318e-05
Time Elapsed:00:03:01:152
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:351
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:174
  Volume converged to 3.25465e-05
Time Elapsed:00:03:05:552
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:936
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:345
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:049
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:220
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:961
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:442
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:367
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:522
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:024
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:413
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:659
  Volume converged to 3.26318e-05
Time Elapsed:00:03:04:959
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:726
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:362
  Volume converged to 3.26318e-05
Time Elapsed:00:03:04:787
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:358
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:090
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:011
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:418
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:977
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:535
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:539
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:398
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:568
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:900
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:414
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:396
  Volume converged to 3.44243e-05
Time Elapsed:00:03:02:619
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:553
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:878
  Volume converged to 3.26318e-05
Time Elapsed:00:03:05:208
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:234
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:621
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:810
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:12:429
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:813
  Volume converged to 3.26318e-05
Time Elapsed:00:03:05:800
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:398
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:033
  Volume converged to 3.26318e-05
Time Elapsed:00:03:05:348
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:741
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:768
  Volume converged to 3.26318e-05
Time Elapsed:00:03:05:380
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:726
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:113
  Volume converged to 3.26319e-05
Time Elapsed:00:03:04:646
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:097
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:690
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:905
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:629
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:945
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:235
  Volume converged to 3.26318e-05
Time Elapsed:00:03:05:987
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:179
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:59:608
  Volume converged to 3.26318e-05
Time Elapsed:00:03:07:594
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:737
  Volume converged to 3.25190e-05
Time Elapsed:00:03:05:442
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:491
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:613
  Volume converged to 3.26318e-05
Time Elapsed:00:03:05:395
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:57:625
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:073
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:193
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:476
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:867
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:492
  Volume converged to 3.26318e-05
Time Elapsed:00:03:01:230
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:413
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:477
  Volume converged to 3.26320e-05
Time Elapsed:00:03:01:698
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:523
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:681
  Volume converged to 3.26318e-05
Time Elapsed:00:03:00:949
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:600
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:022
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:602
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:944
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:972
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:491
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:267
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:101
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:461
  Volume converged to 3.27447e-05
Time Elapsed:00:03:01:542
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:258
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:957
  Volume converged to 3.26313e-05
Time Elapsed:00:03:04:038
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:180
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:849
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:946
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:819
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:661
  Volume converged to 3.20446e-05
Time Elapsed:00:03:04:459
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:395
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:036
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:770
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:016
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:008
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:070
  Volume converged to 3.26318e-05
Time Elapsed:00:03:00:887
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:319
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:695
  Volume converged to 3.26338e-05
Time Elapsed:00:03:01:932
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:522
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:789
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:306
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:398
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:083
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:616
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:12:569
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:323
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:979
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:14:021
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:102
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:695
  Volume converged to 3.26318e-05
Time Elapsed:00:03:01:651
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:132
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:070
  Volume converged to 3.27262e-05
Time Elapsed:00:03:02:056
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:491
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:458
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:945
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:569
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:727
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:007
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:59:949
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:961
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:369
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:711
  Volume converged to 3.26318e-05
Time Elapsed:00:03:01:619
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:054
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:337
  Volume converged to 3.26318e-05
Time Elapsed:00:03:01:246
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:194
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:553
  Volume converged to 3.26299e-05
Time Elapsed:00:03:02:619
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:523
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:490
  Volume converged to 3.26317e-05
Time Elapsed:00:03:02:852
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:040
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:630
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:078
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:049
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:946
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:334
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:197
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:132
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:319
  Volume converged to 7.49562e-05
Time Elapsed:00:03:02:509
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:320
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:224
  Volume converged to 3.26390e-05
Time Elapsed:00:03:03:336
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:489
  Volume converged to 3.26324e-05
Time Elapsed:00:03:03:913
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:567
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:158
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:893
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:598
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:961
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:067
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:915
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:179
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:866
  Volume converged to 3.26318e-05
Time Elapsed:00:03:01:932
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:257
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:957
  Volume converged to 3.26066e-05
Time Elapsed:00:03:04:163
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:584
  Volume converged to 3.26318e-05
Time Elapsed:00:03:03:071
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:039
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:495
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:805
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:662
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:883
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:43:212
  Volume converged to 3.26318e-05
Time Elapsed:00:02:50:715
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:42:198
  Volume converged to 3.26318e-05
Time Elapsed:00:02:50:138
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:789
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:39:904
  Volume converged to 3.26319e-05
Time Elapsed:00:02:47:221
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:17:953
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:16:704
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:19:372
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:431
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:15:739
  Volume converged to 3.26318e-05
Time Elapsed:00:02:22:479
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:711
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:13:758
  Volume converged to 3.26318e-05
Time Elapsed:00:02:20:763
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:38:343
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:38:046
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:000
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:02:08:34:273
ITERATION 9 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 10 start
07-Jul-2016 06:47:27
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:335
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:071
  Volume converged to 3.25987e-05
Time Elapsed:00:03:01:277
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:196
  Volume converged to 3.24990e-05
Time Elapsed:00:03:01:839
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:554
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:191
  Volume converged to 3.26235e-05
Time Elapsed:00:03:04:616
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:175
  Volume converged to 3.26298e-05
Time Elapsed:00:03:04:803
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:066
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:494
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:170
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:11:243
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:945
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:068
  Volume converged to 3.26152e-05
Time Elapsed:00:03:03:008
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:287
  Volume converged to 3.25655e-05
Time Elapsed:00:03:02:790
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:411
  Volume converged to 3.26277e-05
Time Elapsed:00:03:03:648
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:522
  Volume converged to 3.26318e-05
Time Elapsed:00:03:02:697
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:136
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:880
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:786
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:665
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:992
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:446
  Volume converged to 3.23661e-05
Time Elapsed:00:03:01:276
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:195
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:897
  Volume converged to 3.20990e-05
Time Elapsed:00:03:01:885
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:367
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:582
  Volume converged to 3.15563e-05
Time Elapsed:00:03:03:788
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:616
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:205
  Volume converged to 3.21935e-05
Time Elapsed:00:03:05:817
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:887
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:188
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:703
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:265
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:000
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:00:24:50:852
ITERATION 10 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 11 start
07-Jul-2016 07:12:18
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:274
  Volume converged to 3.26254e-05
Time Elapsed:00:03:01:574
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:601
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:381
  Volume converged to 3.26183e-05
Time Elapsed:00:03:02:993
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:554
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:412
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:931
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:616
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:834
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:492
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:12:289
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:13:179
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:13:943
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:14:833
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:004
  Volume converged to 3.26254e-05
Time Elapsed:00:03:01:241
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:632
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:582
  Volume converged to 3.26254e-05
Time Elapsed:00:03:01:226
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:663
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:51:506
  Volume converged to 3.26254e-05
Time Elapsed:00:03:00:087
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:973
  Volume converged to 3.26513e-05
Time Elapsed:00:03:01:351
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:515
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:972
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:168
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:715
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:336
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:521
  Volume converged to 3.25401e-05
Time Elapsed:00:03:04:743
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:930
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:518
  Volume converged to 3.26254e-05
Time Elapsed:00:03:06:350
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:585
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:351
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:839
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:554
  Volume converged to 3.26254e-05
Time Elapsed:00:03:04:135
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:821
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:01:807
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:161
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:927
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:242
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:759
  Volume converged to 3.26254e-05
Time Elapsed:00:03:01:949
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:241
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:930
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:182
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:569
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:447
  Volume converged to 3.26254e-05
Time Elapsed:00:03:01:792
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:039
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:307
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:18:498
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:17:406
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:17:921
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:18:420
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:399
  Volume converged to 3.26254e-05
Time Elapsed:00:03:01:682
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:429
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:459
  Volume converged to 3.44156e-05
Time Elapsed:00:03:02:758
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:444
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:069
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:369
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:647
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:208
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:741
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:722
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:484
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:516
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:110
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:148
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:144
  Volume converged to 3.26254e-05
Time Elapsed:00:03:04:162
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:336
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:878
  Volume converged to 3.26254e-05
Time Elapsed:00:03:04:038
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:538
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:679
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:104
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:570
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:052
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:398
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:647
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:240
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:860
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:409
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:367
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:036
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:430
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:148
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:177
  Volume converged to 3.25126e-05
Time Elapsed:00:03:03:196
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:367
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:022
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:166
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:304
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:271
  Volume converged to 3.26253e-05
Time Elapsed:00:03:03:383
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:393
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:158
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:140
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:527
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:039
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:272
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:213
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:868
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:774
  Volume converged to 3.26254e-05
Time Elapsed:00:03:00:575
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:648
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:896
  Volume converged to 3.26255e-05
Time Elapsed:00:03:03:477
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:242
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:071
  Volume converged to 3.26254e-05
Time Elapsed:00:03:01:152
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:364
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:527
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:356
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:11:586
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:993
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:659
  Volume converged to 3.27383e-05
Time Elapsed:00:03:04:600
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:211
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:624
  Volume converged to 3.20392e-05
Time Elapsed:00:03:06:862
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:756
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:771
  Volume converged to 3.26249e-05
Time Elapsed:00:03:03:445
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:195
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:874
  Volume converged to 3.26254e-05
Time Elapsed:00:03:06:799
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:014
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:11:009
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:597
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:470
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:912
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:009
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:367
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:846
  Volume converged to 3.26254e-05
Time Elapsed:00:03:05:067
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:569
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:990
  Volume converged to 3.26273e-05
Time Elapsed:00:03:03:461
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:897
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:095
  Volume converged to 3.26254e-05
Time Elapsed:00:03:05:723
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:563
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:377
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:922
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:657
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:023
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:471
  Volume converged to 3.26254e-05
Time Elapsed:00:03:05:458
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:445
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:316
  Volume converged to 3.26254e-05
Time Elapsed:00:03:04:631
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:647
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:318
  Volume converged to 3.27196e-05
Time Elapsed:00:03:03:804
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:726
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:721
  Volume converged to 3.26254e-05
Time Elapsed:00:03:05:364
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:234
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:253
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:791
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:563
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:241
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:273
  Volume converged to 3.26254e-05
Time Elapsed:00:03:02:571
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:348
  Volume converged to 3.26234e-05
Time Elapsed:00:03:03:554
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:413
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:52:229
  Volume converged to 3.26254e-05
Time Elapsed:00:03:00:231
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:364
  Volume converged to 3.26252e-05
Time Elapsed:00:03:03:663
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:607
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:04:582
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:142
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:113
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:898
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:754
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:617
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:117
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:926
  Volume converged to 3.26325e-05
Time Elapsed:00:03:03:960
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:055
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:178
  Volume converged to 7.49305e-05
Time Elapsed:00:03:02:368
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:414
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:754
  Volume converged to 3.26259e-05
Time Elapsed:00:03:04:147
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:00:744
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:960
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:207
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:02:257
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:727
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:487
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:960
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:234
  Volume converged to 3.26002e-05
Time Elapsed:00:03:06:393
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:476
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:489
  Volume converged to 3.26254e-05
Time Elapsed:00:03:03:866
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:397
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:455
  Volume converged to 3.26254e-05
Time Elapsed:00:03:05:707
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:209
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:569
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:03:272
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:066
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:976
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:42:369
  Volume converged to 3.26254e-05
Time Elapsed:00:02:50:122
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:915
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:43:539
  Volume converged to 3.26254e-05
Time Elapsed:00:02:51:199
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:836
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:43:773
  Volume converged to 3.26254e-05
Time Elapsed:00:02:51:121
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:16:065
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:15:613
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:14:240
Calculate Objective - CutCellFlow end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:399
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:14:616
  Volume converged to 3.26254e-05
Time Elapsed:00:02:21:386
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:04:789
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:12:963
  Volume converged to 3.26254e-05
Time Elapsed:00:02:20:232
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:38:530
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:03:37:813
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:016
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:02:09:01:433
ITERATION 11 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 12 start
07-Jul-2016 09:21:19
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:476
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:112
  Volume converged to 3.19447e-05
Time Elapsed:00:03:04:600
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:241
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:441
  Volume converged to 3.24560e-05
Time Elapsed:00:03:04:568
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:377
  Volume converged to 3.25831e-05
Time Elapsed:00:03:05:536
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:679
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:298
  Volume converged to 3.26148e-05
Time Elapsed:00:03:05:832
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:14:458
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:14:488
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:15:846
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:19:668
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:164
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:209
  Volume converged to 3.22863e-05
Time Elapsed:00:03:02:322
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:273
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:083
  Volume converged to 3.26042e-05
Time Elapsed:00:03:03:211
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:757
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:801
  Volume converged to 3.26254e-05
Time Elapsed:00:03:04:506
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:632
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:147
  Volume converged to 3.25407e-05
Time Elapsed:00:03:02:743
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:392
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:05:425
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:06:470
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:07:702
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:195
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:53:726
  Volume converged to 3.12442e-05
Time Elapsed:00:03:01:901
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:070
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:58:984
  Volume converged to 4.50240e-05
Time Elapsed:00:03:06:971
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:663
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:57:003
  Volume converged to 5.31508e-05
Time Elapsed:00:03:05:442
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:570
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:03:00:996
  Volume converged to 3.83178e-06
Time Elapsed:00:03:09:373
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:01:10:358
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:31:962
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:32:118
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:04:35:035
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
Generate New Population start
    Time Elapsed:00:00:00:016
Generate New Population end
-----------------------
  
  
--------------------------------------------------------------------------------------------
    Time Elapsed:00:24:35:642
ITERATION 12 end
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
  
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
ITERATION 13 start
07-Jul-2016 09:45:55
--------------------------------------------------------------------------------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:476
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:631
  Volume converged to 3.26093e-05
Time Elapsed:00:03:02:993
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:382
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:54:319
  Volume converged to 3.26093e-05
Time Elapsed:00:03:02:634
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:460
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:676
  Volume converged to 3.26022e-05
Time Elapsed:00:03:04:054
SNAKE PROCESS end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:553
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:55:286
  Volume converged to 3.26093e-05
Time Elapsed:00:03:03:788
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:09:481
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:08:856
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:167
  
-----------------------
Calculate Objective - CutCellFlow start
    Time Elapsed:00:05:10:775
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:507
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:223
  Volume converged to 3.26093e-05
Time Elapsed:00:03:04:522
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:616
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:56:940
  Volume converged to 3.26352e-05
Time Elapsed:00:03:05:395
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:288
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:03:00:044
  Volume converged to 3.26093e-05
Time Elapsed:00:03:08:203
SNAKE PROCESS end
-----------------------
  
Calculate Objective - CutCellFlow end
-----------------------
  
  
-----------------------
SNAKE PROCESS start
  Start initialisation
    Generate Cell Centred Grid
    Establish Cell Colume Information
    Find Border Vertices
    Initialise Snaxel Grid
  Initialisation time:00:00:05:600
  Start Time Stepping
  150 Steps Performed
  Iteration Time:00:02:59:109
  Volume converged to 3.26093e-05
Time Elapsed:00:03:07:439
SNAKE PROCESS end
-----------------------
  
  
-----------------------
Calculate Objective - CutCellFlow start
  
-----------------------
Calculate Objective - CutCellFlow start
  
-----------------------
Calculate Objective - CutCellFlow start
  
-----------------------
Calculate Objective - CutCellFlow start
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Operation terminated by user during CutCellFlow_Handler (line 32)


In ExecuteOptimisation>CutCellFlow (line 868)
    [obj]=CutCellFlow_Handler(paramoptim,boundaryLoc);

In ExecuteOptimisation>EvaluateObjective (line 840)
    [objValue,additional]=eval([objectiveName,'(paramoptim,member,loop);']);

In ExecuteOptimisation>NormalExecutionIteration (line 257)
    [population.objective,population.additional]=EvaluateObjective(objectiveName,paramoptim,population,loop);

In ExecuteOptimisation>(parfor body) (line 219)
            population(ii)=NormalExecutionIteration(population(ii),newRefGrid,newrestartsnake,...

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Operation terminated by user during CutCellFlow_Handler (line 32)


In ExecuteOptimisation>CutCellFlow (line 868)
    [obj]=CutCellFlow_Handler(paramoptim,boundaryLoc);

In ExecuteOptimisation>EvaluateObjective (line 840)
    [objValue,additional]=eval([objectiveName,'(paramoptim,member,loop);']);

In ExecuteOptimisation>NormalExecutionIteration (line 257)
    [population.objective,population.additional]=EvaluateObjective(objectiveName,paramoptim,population,loop);

In ExecuteOptimisation>(parfor body) (line 219)
            population(ii)=NormalExecutionIteration(population(ii),newRefGrid,newrestartsnake,...

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Operation terminated by user during CutCellFlow_Handler (line 32)


In ExecuteOptimisation>CutCellFlow (line 868)
    [obj]=CutCellFlow_Handler(paramoptim,boundaryLoc);

In ExecuteOptimisation>EvaluateObjective (line 840)
    [objValue,additional]=eval([objectiveName,'(paramoptim,member,loop);']);

In ExecuteOptimisation>NormalExecutionIteration (line 257)
    [population.objective,population.additional]=EvaluateObjective(objectiveName,paramoptim,population,loop);

In ExecuteOptimisation>(parfor body) (line 219)
            population(ii)=NormalExecutionIteration(population(ii),newRefGrid,newrestartsnake,...

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: sun.java2d.HeadlessGraphicsEnvironment cannot be cast to sun.awt.Win32GraphicsEnvironment
	at sun.awt.windows.WToolkit$5.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$200(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Operation terminated by user during CutCellFlow_Handler (line 32)


In ExecuteOptimisation>CutCellFlow (line 868)
    [obj]=CutCellFlow_Handler(paramoptim,boundaryLoc);

In ExecuteOptimisation>EvaluateObjective (line 840)
    [objValue,additional]=eval([objectiveName,'(paramoptim,member,loop);']);

In ExecuteOptimisation>NormalExecutionIteration (line 257)
    [population.objective,population.additional]=EvaluateObjective(objectiveName,paramoptim,population,loop);

In ExecuteOptimisation>(parfor body) (line 219)
            population(ii)=NormalExecutionIteration(population(ii),newRefGrid,newrestartsnake,...

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('distcomp.remoteparfor/getCompleteIntervals', 'C:\Program Files\MATLAB\R2015a\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m', 127)" style="font-weight:bold">distcomp.remoteparfor/getCompleteIntervals</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m',127,0)">line 127</a>)


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function>distributed_execution', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\lang\parallel_function.p', 820)" style="font-weight:bold">parallel_function>distributed_execution</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\lang\parallel_function.p',820,0)">line 820</a>)
        [tags, out] = P.getCompleteIntervals(chunkSize);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\lang\parallel_function.p', 587)" style="font-weight:bold">parallel_function</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\lang\parallel_function.p',587,0)">line 587</a>)
        R = distributed_execution(...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ExecuteOptimisation>PerformIteration', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\ExecuteOptimisation.m', 212)" style="font-weight:bold">ExecuteOptimisation>PerformIteration</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\ExecuteOptimisation.m',212,0)">line 212</a>)
    parfor ii=1:nPop

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ExecuteOptimisation', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\ExecuteOptimisation.m', 46)" style="font-weight:bold">ExecuteOptimisation</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\ExecuteOptimisation.m',46,0)">line 46</a>)
        [iterstruct(nIter).population]=PerformIteration(paramoptim,outinfo,nIter,iterstruct(nIter).population,gridrefined,restartsnake,...} 
clc
pathStr='C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\results\Optimisation\Archive_2016_07\Day_2016-07-06\Dir_2016-07-06T185430_Desk_CG_inline_out'

pathStr =

C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\results\Optimisation\Archive_2016_07\Day_2016-07-06\Dir_2016-07-06T185430_Desk_CG_inline_out

PostTreatIncomplete(pathStr,[1 12])
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
WRITING AUTOMATIC FUNCTIONS
[Warning: File 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume
Parametrisation\results\Optimisation\Archive_2016_07\Day_2016-07-06\Dir_2016-07-06T185430_Desk_CG_inline_out\Tec360plt_Flow_2016-07-06T185430_Desk_CG_inline_out.plt'
not found.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('OptimisationOutput>ExtractOptimalFlow', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m', 399)" style="font-weight:bold">OptimisationOutput>ExtractOptimalFlow</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m',399,0)">line 399</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('OptimisationOutput_OptimisationOutput_Final', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m', 199)" style="font-weight:bold">OptimisationOutput_OptimisationOutput_Final</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m',199,0)">line 199</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('OptimisationOutput', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m', 26)" style="font-weight:bold">OptimisationOutput</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m',26,0)">line 26</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PostTreatIncomplete', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\PostTreatIncomplete.m', 20)" style="font-weight:bold">PostTreatIncomplete</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\PostTreatIncomplete.m',20,0)">line 20</a>)] 
[Warning: File 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume
Parametrisation\results\Optimisation\Archive_2016_07\Day_2016-07-06\Dir_2016-07-06T185430_Desk_CG_inline_out\Tec360plt_Snak_2016-07-06T185430_Desk_CG_inline_out.plt'
not found.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('OptimisationOutput>ExtractOptimalFlow', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m', 400)" style="font-weight:bold">OptimisationOutput>ExtractOptimalFlow</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m',400,0)">line 400</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('OptimisationOutput_OptimisationOutput_Final', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m', 199)" style="font-weight:bold">OptimisationOutput_OptimisationOutput_Final</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m',199,0)">line 199</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('OptimisationOutput', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m', 26)" style="font-weight:bold">OptimisationOutput</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\OptimisationOutput.m',26,0)">line 26</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PostTreatIncomplete', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\PostTreatIncomplete.m', 20)" style="font-weight:bold">PostTreatIncomplete</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\Active_Build\Optimisation\PostTreatIncomplete.m',20,0)">line 20</a>)] 
12 Reruns needed, stop bitching and be patient
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item
FindDir Could not find requested item

ans = 

    rootDir: 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisa...'
    tOutput: 7.3652e+05
     marker: '2016-07-06T185430_Desk_CG_inline_out'

clc
clear 
close all
edit PiecePolyBasis
PiecePolyBasis
{Undefined function or variable 'plotSteps'.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 10)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',10,0)">line 10</a>)
    PlotPiecePoly(d,steps,plotSteps,matCoeff);
} 
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis
grid on
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis
close all
clc
PiecePolyBasis
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot')" style="font-weight:bold">plot</a>
Vectors must be the same length.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>PlotPiecePoly', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 42)" style="font-weight:bold">PiecePolyBasis>PlotPiecePoly</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',42,0)">line 42</a>)
    plot(Xvec,Yvec,Xvec,Yderiv,Xvec,Yintg)

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 11)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',11,0)">line 11</a>)
    PlotPiecePoly(d,steps,plotSteps,matCoeff);
} 
PiecePolyBasis
axis([-1 1 -10 10])
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',13,1)">13  </a>end
axis([-1 1 -10 10])
PiecePolyBasis
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',13,1)">13  </a>end
axis([-1 1 -10 10])
PiecePolyBasis
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',13,1)">13  </a>end
axis([-1 1 -10 10])
axis([-1 1 -2 10])
PiecePolyBasis
axis([-1 1 -2 10])
axis([-1 1 -10 10])
if system_dependent('IsDebugMode')==1, dbcont; end
PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end
PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end
PiecePolyBasis
PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis
PiecePolyBasis

ans =

    3.0000


ans =

  -14.4000


ans =

  -14.4000


ans =

  -61.2000


ans =

  -61.2000


ans =

  -21.6000

PiecePolyBasis

ans =

    3.0000


ans =

  -14.4000


ans =

  -14.4000


ans =

  -61.2000


ans =

  -61.2000


ans =

  -21.6000

PiecePolyBasis

ans =

    3.0000


ans =

  -5.5511e-16


ans =

  -5.5511e-16


ans =

   1.7764e-15


ans =

   1.7764e-15


ans =

   7.1054e-15

PiecePolyBasis

ans =

     3


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -4.4409e-16

PiecePolyBasis

ans =

     3


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0

PiecePolyBasis

ans =

     3


ans =

  -4.4409e-16


ans =

  -4.4409e-16


ans =

   8.8818e-16


ans =

   8.8818e-16


ans =

  -3.5527e-15

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

  -6.6613e-16

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

     0

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -2.2204e-16

PiecePolyBasis

ans =

     3


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -4.4409e-16


ans =

  -4.4409e-16


ans =

     0


ans =

     0


ans =

     0

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -2.2204e-16

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

  -8.8818e-16


ans =

  -8.8818e-16


ans =

     0

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -2.2204e-16

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -2.2204e-16

<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',13,1)">13  </a>end
[coeffMask]=MatrixOpCoeff(d);
coeffMask*matCoeff(:,1)

ans =

    0.5250
   -1.6500
    0.9500

coeffMask*coeffMask*matCoeff(:,1)

ans =

   -0.1500
    0.4500
   -0.2500

coeffMask*coeffMask*coeffMask*matCoeff(:,1)

ans =

    0.0750
   -0.1500
    0.0500

if system_dependent('IsDebugMode')==1, dbquit; end
PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

  -4.4409e-16


ans =

  -4.4409e-16


ans =

  -8.8818e-16


ans =

  -8.8818e-16


ans =

   1.0658e-14


ans =

   1.0658e-14


ans =

  -1.4211e-14


ans =

  -1.4211e-14


ans =

  -5.6843e-14


ans =

  -5.6843e-14


ans =

  -2.2737e-13


ans =

  -2.2737e-13


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -9.3132e-10


ans =

  -9.3132e-10


ans =

   3.7253e-09


ans =

   3.7253e-09


ans =

     0

PiecePolyBasis

ans =

     3


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

  -2.2204e-16


ans =

  -2.2204e-16


ans =

  -4.4409e-16


ans =

  -4.4409e-16


ans =

  -8.8818e-16


ans =

  -8.8818e-16


ans =

   1.0658e-14


ans =

   1.0658e-14


ans =

  -1.4211e-14

close all
clc
if system_dependent('IsDebugMode')==1, dbquit; end
PiecePolyBasis
[coeffMask]=MatrixOpCoeff(d);
eig(coeffMask)

ans =

   -3.7321
   -0.2679
    0.0000

eig(coeffMask')

ans =

   -3.7321
   -0.2679
    0.0000

eig(coeffMask)

ans =

   -3.7321
   -0.2679
    0.0000

[y,v]=eig(coeffMask)

y =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963


v =

   -3.7321         0         0
         0   -0.2679         0
         0         0    0.0000

help eig
 <strong>eig</strong>    Eigenvalues and eigenvectors.
    E = <strong>eig</strong>(A) produces a column vector E containing the eigenvalues of 
    a square matrix A.
 
    [V,D] = <strong>eig</strong>(A) produces a diagonal matrix D of eigenvalues and 
    a full matrix V whose columns are the corresponding eigenvectors  
    so that A*V = V*D.
  
    [V,D,W] = <strong>eig</strong>(A) also produces a full matrix W whose columns are the
    corresponding left eigenvectors so that W'*A = D*W'.
 
    [...] = <strong>eig</strong>(A,'nobalance') performs the computation with balancing
    disabled, which sometimes gives more accurate results for certain
    problems with unusual scaling. If A is symmetric, <strong>eig</strong>(A,'nobalance')
    is ignored since A is already balanced.
 
    [...] = <strong>eig</strong>(A,'balance') is the same as <strong>eig</strong>(A).
 
    E = <strong>eig</strong>(A,B) produces a column vector E containing the generalized 
    eigenvalues of square matrices A and B.
 
    [V,D] = <strong>eig</strong>(A,B) produces a diagonal matrix D of generalized
    eigenvalues and a full matrix V whose columns are the corresponding
    eigenvectors so that A*V = B*V*D.
 
    [V,D,W] = <strong>eig</strong>(A,B) also produces a full matrix W whose columns are the
    corresponding left eigenvectors so that W'*A = D*W'*B.
 
    [...] = <strong>eig</strong>(A,B,'chol') is the same as <strong>eig</strong>(A,B) for symmetric A and
    symmetric positive definite B.  It computes the generalized eigenvalues
    of A and B using the Cholesky factorization of B.
 
    [...] = <strong>eig</strong>(A,B,'qz') ignores the symmetry of A and B and uses the QZ
    algorithm. In general, the two algorithms return the same result,
    however using the QZ algorithm may be more stable for certain problems.
    The flag is ignored when A or B are not symmetric.
 
    [...] = <strong>eig</strong>(...,'vector') returns eigenvalues in a column vector 
    instead of a diagonal matrix.
 
    [...] = <strong>eig</strong>(...,'matrix') returns eigenvalues in a diagonal matrix
    instead of a column vector.
 
    See also <a href="matlab:help condeig">condeig</a>, <a href="matlab:help eigs">eigs</a>, <a href="matlab:help ordeig">ordeig</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('eig')">Other functions named eig</a>

    Reference page in Help browser
       <a href="matlab:doc eig">doc eig</a>

y*coeffMask

ans =

   -2.5385   -0.9973   -0.3626
   -2.4963   -0.8667   -0.2426
    6.8094    2.6606    0.9582

coeffMask*y

ans =

   -2.6707   -0.0709    0.0000
    2.2576    0.2238   -0.0000
    1.3034   -0.1292         0

v*y

ans =

   -2.6707   -0.9880   -0.6497
    0.1621    0.2238    0.1866
   -0.0000    0.0000    0.0000

coeffMask*y

ans =

   -2.6707   -0.0709    0.0000
    2.2576    0.2238   -0.0000
    1.3034   -0.1292         0

y*d

ans =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963

y*v

ans =

   -2.6707   -0.0709    0.0000
    2.2576    0.2238   -0.0000
    1.3034   -0.1292    0.0000

v

v =

   -3.7321         0         0
         0   -0.2679         0
         0         0    0.0000

PiecePolyBasis
[coeffMask,endCond]=MatrixOpCoeff(d)

coeffMask =

   -6.0000   -2.2500   -0.7500
    4.0000    1.0000         0
    4.0000    2.0000    1.0000


endCond =

     4     2     1

endCond*(coeffMask^4)

ans =

   612   250    97

endCond*(coeffMask^5)

ans =

       -2284        -933        -362

endCond*(coeffMask^6)

ans =

        8524        3482        1351

endCond*(coeffMask^6)/1351

ans =

    6.3094    2.5774    1.0000

endCond*(coeffMask^5)/362

ans =

   -6.3094   -2.5773   -1.0000

endCond*(coeffMask^4)/97

ans =

    6.3093    2.5773    1.0000

for ii=1:10, res=endCond*(coeffMask^ii);strRes(ii,1:3)=res/res(end);end
plot(1:10,strRes')
figure
plot(1:10,strRes')
[coeffMask,endCond]=MatrixOpCoeff(2)

coeffMask =

   -6.0000   -1.1250   -0.1875
    8.0000    1.0000         0
   16.0000    4.0000    1.0000


endCond =

    16     4     1

for ii=1:10, res=endCond*(coeffMask^ii);strRes(ii,1:3)=res/res(end);end
figure
plot(1:10,strRes')
24/4

ans =

     6

5/4

ans =

    1.2500

[coeffMask,endCond]=MatrixOpCoeff(d)

coeffMask =

   -6.0000   -2.2500   -0.7500
    4.0000    1.0000         0
    4.0000    2.0000    1.0000


endCond =

     4     2     1

for ii=1:10, res=endCond*(coeffMask^ii);strRes(ii,1:3)=res/res(end);end
PiecePolyBasis
[coeffMask,endCond]=MatrixOpCoeff(d)

coeffMask =

   -6.0000   -2.2500   -0.7500
    4.0000    1.0000         0
    4.0000    2.0000    1.0000


endCond =

     4     2     1

[y,v]=eig(coeffMask)

y =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963


v =

   -3.7321         0         0
         0   -0.2679         0
         0         0    0.0000

endCond*y*v^5/y

ans =

   1.0e+03 *

   -2.2840   -0.9330   -0.3620

for ii=1:10, res=endCond*y*v^ii/y;strRes(ii,1:3)=res/res(end);end
for ii=1:10, res=endCond*y*v^ii/y;strRes(ii,1:3)=res/res(end);strRes(ii,4)=det((coeffMask^ii));end
endCond*y

ans =

    1.3034   -0.1292         0

y^-1

ans =

    2.4204    0.9887    0.3836
   -6.5428   -5.5058   -3.8701
    5.7446    4.3084    4.3084

syms l1 l2
lmat=[l1 0 0; 0 l2 0; 0 0 0]
 
lmat =
 
[ l1,  0, 0]
[  0, l2, 0]
[  0,  0, 0]
 
lmat*y^-1
 
ans =
 
[  (5450157912056677*l1)/2251799813685248,   (556588723353991*l1)/562949953421312,  (3455261661607183*l1)/9007199254740992]
[ -(7366564592435069*l2)/1125899906842624, -(1549752722297213*l2)/281474976710656, -(8714739482160157*l2)/2251799813685248]
[                                       0,                                      0,                                       0]
 
lmat^2*y^-1
 
ans =
 
[  (5450157912056677*l1^2)/2251799813685248,   (556588723353991*l1^2)/562949953421312,  (3455261661607183*l1^2)/9007199254740992]
[ -(7366564592435069*l2^2)/1125899906842624, -(1549752722297213*l2^2)/281474976710656, -(8714739482160157*l2^2)/2251799813685248]
[                                         0,                                        0,                                         0]
 
lmat^4*y^-1
 
ans =
 
[  (5450157912056677*l1^4)/2251799813685248,   (556588723353991*l1^4)/562949953421312,  (3455261661607183*l1^4)/9007199254740992]
[ -(7366564592435069*l2^4)/1125899906842624, -(1549752722297213*l2^4)/281474976710656, -(8714739482160157*l2^4)/2251799813685248]
[                                         0,                                        0,                                         0]
 
syms n
endCond*ylmat^n/y
{Undefined function or variable 'ylmat'.
} 
endCond*y*lmat^n/y
 
ans =
 
[ (8*33^(1/2)*(2332773304695991426379363600776*33^(1/2)*l1^n + 625064723118174744804703905955*33^(1/2)*l2^n))/195217309835734905617950265690355, (7623384637206141036078027239184*l1^n)/5915676055628330473271220172435 + (841593494810104965047779875398*l2^n)/1183135211125666094654244034487, (2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487]
 
sol=endCond*y*lmat^n/y
 
sol =
 
[ (8*33^(1/2)*(2332773304695991426379363600776*33^(1/2)*l1^n + 625064723118174744804703905955*33^(1/2)*l2^n))/195217309835734905617950265690355, (7623384637206141036078027239184*l1^n)/5915676055628330473271220172435 + (841593494810104965047779875398*l2^n)/1183135211125666094654244034487, (2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487]
 
sol=sol/sol(3)
 
sol =
 
[ (8*33^(1/2)*(2332773304695991426379363600776*33^(1/2)*l1^n + 625064723118174744804703905955*33^(1/2)*l2^n))/(195217309835734905617950265690355*((2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487)), ((7623384637206141036078027239184*l1^n)/5915676055628330473271220172435 + (841593494810104965047779875398*l2^n)/1183135211125666094654244034487)/((2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487), 1]
 
pretty(sol)
/                                                                                                                                                   n                                    n    \
|                                                                                                                 7623384637206141036078027239184 l1    841593494810104965047779875398 l2     |
|                                                          n                                             n        ----------------------------------- + ----------------------------------    |
|     sqrt(33) (2332773304695991426379363600776 sqrt(33) l1  + 625064723118174744804703905955 sqrt(33) l2 ) 8       5915676055628330473271220172435       1183135211125666094654244034487     |
| --------------------------------------------------------------------------------------------------------------, ------------------------------------------------------------------------, 1 |
| /                                   n                                    n \                                                                      n                                    n    |
| | 2957838027814158183319300037632 l1    591567605562835067125898313016 l2  |                                    2957838027814158183319300037632 l1    591567605562835067125898313016 l2     |
| | ----------------------------------- + ---------------------------------- | 195217309835734905617950265690355  ----------------------------------- + ----------------------------------    |
\ \   5915676055628330473271220172435       1183135211125666094654244034487  /                                      5915676055628330473271220172435       1183135211125666094654244034487     /

round(sol)
 
ans =
 
[ round((8*33^(1/2)*(2332773304695991426379363600776*33^(1/2)*l1^n + 625064723118174744804703905955*33^(1/2)*l2^n))/(195217309835734905617950265690355*((2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487))), round(((7623384637206141036078027239184*l1^n)/5915676055628330473271220172435 + (841593494810104965047779875398*l2^n)/1183135211125666094654244034487)/((2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487)), 1]
 
help syms
 <strong>syms</strong>   Short-cut for constructing symbolic variables.
    <strong>syms</strong> arg1 arg2 ...
    is short-hand notation for creating symbolic variables
       arg1 = sym('arg1');
       arg2 = sym('arg2'); ...
    or, if the argument has the form f(x1,x2,...), for
    creating symbolic variables
       x1 = sym('x1');
       x2 = sym('x2');
       ...
       f = symfun(sym('f(x1,x2,...)'), [x1, x2, ...]);
    The outputs are created in the current workspace.
 
    <strong>syms</strong>  ... ASSUMPTION
    additionally puts an assumption on the variables created.
    The ASSUMPTION can be 'real', 'rational', 'integer', or 'positive'.
    <strong>syms</strong>  ... clear
    clears any assumptions on the variables created, including those
    made with the ASSUME command.
 
    Each input argument must begin with a letter and must contain only
    alphanumeric characters.
 
    By itself, <strong>syms</strong> lists the symbolic objects in the workspace.
 
    Example 1:
       syms x beta real
    is equivalent to:
       x = sym('x','real');
       beta = sym('beta','real');
 
    To clear the symbolic objects x and beta of 'real' or 'positive' status, type
       syms x beta clear
 
    Example 2:
       syms x(t) a
    is equivalent to:
       a = sym('a');
       t = sym('t');
       x = symfun(sym('x(t)'), [t]);
 
    See also <a href="matlab:help sym">sym</a>, <a href="matlab:help symfun">symfun</a>.

    Reference page in Help browser
       <a href="matlab:doc syms">doc syms</a>

doc syms
sol
 
sol =
 
[ (8*33^(1/2)*(2332773304695991426379363600776*33^(1/2)*l1^n + 625064723118174744804703905955*33^(1/2)*l2^n))/(195217309835734905617950265690355*((2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487)), ((7623384637206141036078027239184*l1^n)/5915676055628330473271220172435 + (841593494810104965047779875398*l2^n)/1183135211125666094654244034487)/((2957838027814158183319300037632*l1^n)/5915676055628330473271220172435 + (591567605562835067125898313016*l2^n)/1183135211125666094654244034487), 1]
 
double(sol)
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('symengine', 'C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\symengine.p', 59)" style="font-weight:bold">symengine</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\symengine.p',59,0)">line 59</a>)
DOUBLE cannot convert the input expression into a double array.
If the input expression contains a symbolic variable, use VPA.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('sym/double', 'C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\@sym\sym.m', 583)" style="font-weight:bold">sym/double</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\@sym\sym.m',583,0)">line 583</a>)
        Xstr = mupadmex('symobj::double', S.s, 0);
} 
help vpa
 <strong>vpa</strong>    Variable precision arithmetic.
    R = <strong>vpa</strong>(S) numerically evaluates each element of the double matrix
    S using variable precision floating point arithmetic with D decimal
    digit accuracy, where D is the current setting of DIGITS.
    The resulting R is a SYM.
 
    <strong>vpa</strong>(S,D) uses D digits, instead of the current setting of DIGITS.
    D is an integer or the SYM representation of a number.
 
    It is important to avoid the evaluation of an expression using double
    precision floating point arithmetic before it is passed to <strong>vpa</strong>.
    For example,
       phi = vpa((1+sqrt(5))/2)
    first computes a 16-digit approximation to the golden ratio, then
    converts that approximation to one with d digits, where d is the current
    setting of DIGITS.  To get full precision, use unevaluated string or
    symbolic arguments,
       phi = vpa('(1+sqrt(5))/2')
    or
       s = sym('sqrt(5)')
       phi = vpa((1+s)/2);
 
    Additional examples:
       vpa(pi,780) shows six consecutive 9's near digit 770 in the
          decimal expansion of pi.
 
       vpa(hilb(2),5) returns
 
          [    1., .50000]
          [.50000, .33333]
 
    See also <a href="matlab:help double">double</a>, <a href="matlab:help digits">digits</a>, <a href="matlab:help subs">subs</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('vpa')">Other functions named vpa</a>

    Reference page in Help browser
       <a href="matlab:doc vpa">doc vpa</a>

vpa(sol)
 
ans =
 
[ (0.00000000000000000000000000000023541201961534152324703127223383*(13400762388997667628776017561810.0*l1^n + 3590723460093302018004849701577.7*l2^n))/(0.49999999999999880769057606900668*l1^n + 0.50000000000000170715803003959504*l2^n), (1.288675134594811273665189923257*l1^n + 0.71132486540518955714001983721623*l2^n)/(0.49999999999999880769057606900668*l1^n + 0.50000000000000170715803003959504*l2^n), 1.0]
 
vpa(sol,5)
 
ans =
 
[ (2.3541e-31*(1.3401e31*l1^n + 3.5907e30*l2^n))/(0.5*l1^n + 0.5*l2^n), (1.2887*l1^n + 0.71132*l2^n)/(0.5*l1^n + 0.5*l2^n), 1.0]
 
2.3541e-31*1.3401e31

ans =

    3.1547

0.00000000000000000000000000000023541201961534152324703127223383*13400762388997667628776017561810

ans =

    3.1547

3.1547*2

ans =

    6.3094

0.00000000000000000000000000000023541201961534152324703127223383

ans =

   2.3541e-31

3590723460093302018004849701577.7

ans =

   3.5907e+30

3590723460093302018004849701577.7*0.00000000000000000000000000000023541201961534152324703127223383

ans =

    0.8453

lT=zeros(3)

lT =

     0     0     0
     0     0     0
     0     0     0

lT(1,1)=1

lT =

     1     0     0
     0     0     0
     0     0     0

lT(2,2)=1

lT =

     1     0     0
     0     1     0
     0     0     0

endCond*y*lT/y

ans =

    4.0000    2.0000    1.0000

y*lT/y

ans =

    0.0000   -0.7500   -0.7500
    4.0000    4.0000    3.0000
   -4.0000   -3.0000   -2.0000

endCond

endCond =

     4     2     1

lT=zeros(3)

lT =

     0     0     0
     0     0     0
     0     0     0

lT(1,1)=1

lT =

     1     0     0
     0     0     0
     0     0     0

endCond*y*lT/y

ans =

    3.1547    1.2887    0.5000

endCond*y*lT/y

ans =

    3.1547    1.2887    0.5000

[coeffMask,endCond]=MatrixOpCoeff(2)

coeffMask =

   -6.0000   -1.1250   -0.1875
    8.0000    1.0000         0
   16.0000    4.0000    1.0000


endCond =

    16     4     1

eig(coeffMask)

ans =

   -3.7321
   -0.2679
    0.0000

kk=1;for ii=[0.1 0.5 1 2 5 10]; [coeffMask,endCond]=MatrixOpCoeff(ii);eigVal(1:3,kk)=eig(coeffMask);kk=kk+1;end
close all
kk=1;for ii=[0.1 0.5 1 2 5 10]; [coeffMask,endCond]=MatrixOpCoeff(ii),eigVal(1:3,kk)=eig(coeffMask);kk=kk+1;end

coeffMask =

   -6.0000  -22.5000  -75.0000
    0.4000    1.0000         0
    0.0400    0.2000    1.0000


endCond =

    0.0400    0.2000    1.0000


coeffMask =

   -6.0000   -4.5000   -3.0000
    2.0000    1.0000         0
    1.0000    1.0000    1.0000


endCond =

     1     1     1


coeffMask =

   -6.0000   -2.2500   -0.7500
    4.0000    1.0000         0
    4.0000    2.0000    1.0000


endCond =

     4     2     1


coeffMask =

   -6.0000   -1.1250   -0.1875
    8.0000    1.0000         0
   16.0000    4.0000    1.0000


endCond =

    16     4     1


coeffMask =

   -6.0000   -0.4500   -0.0300
   20.0000    1.0000         0
  100.0000   10.0000    1.0000


endCond =

   100    10     1


coeffMask =

   -6.0000   -0.2250   -0.0075
   40.0000    1.0000         0
  400.0000   20.0000    1.0000


endCond =

   400    20     1

clc
close all
if system_dependent('IsDebugMode')==1, dbquit; end
8/3-4

ans =

   -1.3333

-4/3

ans =

   -1.3333

PiecePolyBasis
[Warning: Matrix is close to singular or badly scaled. Results may be inaccurate. RCOND =  1.732115e-16.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>MatrixOpCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 93)" style="font-weight:bold">PiecePolyBasis>MatrixOpCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',93,0)">line 93</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GetOriginalCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 107)" style="font-weight:bold">PiecePolyBasis>GetOriginalCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',107,0)">line 107</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GenerateMatCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 61)" style="font-weight:bold">PiecePolyBasis>GenerateMatCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',61,0)">line 61</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 8)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',8,0)">line 8</a>)] 
PiecePolyBasis
[Warning: Matrix is close to singular or badly scaled. Results may be inaccurate. RCOND =  1.732115e-16.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>MatrixOpCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 93)" style="font-weight:bold">PiecePolyBasis>MatrixOpCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',93,0)">line 93</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GetOriginalCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 107)" style="font-weight:bold">PiecePolyBasis>GetOriginalCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',107,0)">line 107</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GenerateMatCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 61)" style="font-weight:bold">PiecePolyBasis>GenerateMatCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',61,0)">line 61</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 8)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',8,0)">line 8</a>)] 
if system_dependent('IsDebugMode')==1, dbquit; end
PiecePolyBasis
[Warning: Matrix is close to singular or badly scaled. Results may be inaccurate. RCOND =  1.732115e-16.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>MatrixOpCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 93)" style="font-weight:bold">PiecePolyBasis>MatrixOpCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',93,0)">line 93</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GetOriginalCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 107)" style="font-weight:bold">PiecePolyBasis>GetOriginalCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',107,0)">line 107</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GenerateMatCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 61)" style="font-weight:bold">PiecePolyBasis>GenerateMatCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',61,0)">line 61</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 8)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',8,0)">line 8</a>)] 
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',115,1)">115 </a>end
if system_dependent('IsDebugMode')==1, dbquit; end
PiecePolyBasis
[Warning: Matrix is close to singular or badly scaled. Results may be inaccurate. RCOND =  1.732115e-16.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>MatrixOpCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 93)" style="font-weight:bold">PiecePolyBasis>MatrixOpCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',93,0)">line 93</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GetOriginalCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 107)" style="font-weight:bold">PiecePolyBasis>GetOriginalCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',107,0)">line 107</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GenerateMatCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 61)" style="font-weight:bold">PiecePolyBasis>GenerateMatCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',61,0)">line 61</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 8)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',8,0)">line 8</a>)] 
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',101,1)">101 </a>end
V

V =

   -3.7321         0         0
         0   -0.2679         0
         0         0    0.0000

l

l =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963

if system_dependent('IsDebugMode')==1, dbquit; end
PiecePolyBasis
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',115,1)">115 </a>end
l

l =

    3.1547    1.2887    0.5000

PiecePolyBasis
[matCoeff]=PiecePolyBasis()

matCoeff =

   -3.0736    4.1986  -11.7721
    6.1471   -6.1471   10.6471
    0.5490    0.5490    5.0490

[matCoeff]=PiecePolyBasis();
PiecePolyBasis

ans =

   1.0e+04 *

   -0.0002    0.0003   -0.0008    0.0029   -0.0107    0.0398   -0.1484    0.5537   -2.0663    7.7114
    0.0004   -0.0004    0.0007   -0.0024    0.0090   -0.0336    0.1254   -0.4680    1.7466   -6.5184
    0.0000    0.0000    0.0003   -0.0014    0.0052   -0.0194    0.0724   -0.2702    1.0084   -3.7634

PiecePolyBasis

ans =

   -2.0490    1.2990   -0.3481    0.0933   -0.0250    0.0067   -0.0018    0.0005   -0.0001    0.0000
    4.0981   -4.0981    1.0981   -0.2942    0.0788   -0.0211    0.0057   -0.0015    0.0004   -0.0001
    2.3660    2.3660   -0.6340    0.1699   -0.0455    0.0122   -0.0033    0.0009   -0.0002    0.0001

clc
[matCoeff]=PiecePolyBasis();
figure, semilogy(1:10,matCoeff)
[Warning: Negative data ignored] 
figure, semilogy(1:10,abs(matCoeff))
PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000

  Columns 21 through 30

   -0.0000    0.0001   -0.0003    0.0013   -0.0047    0.0175   -0.0653    0.2437   -0.9095    3.3942
    0.0000   -0.0001    0.0003   -0.0011    0.0040   -0.0148    0.0552   -0.2060    0.7688   -2.8691
    0.0000   -0.0000    0.0002   -0.0006    0.0023   -0.0085    0.0319   -0.1189    0.4439   -1.6565

[matCoeff]=PiecePolyBasis();
[matCoeff]=PiecePolyBasis();
[matCoeff]=PiecePolyBasis();
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',105,1)">105 </a>end
[V,l]=eig(coeffMask)

V =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963


l =

   -3.7321         0         0
         0   -0.2679         0
         0         0    0.0000

[V,l]=eig(coeffMask*1e6)

V =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963


l =

   1.0e+06 *

   -3.7321         0         0
         0   -0.2679         0
         0         0   -0.0000

[V1,l]=eig(coeffMask)

V1 =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963


l =

   -3.7321         0         0
         0   -0.2679         0
         0         0    0.0000

[V2,l]=eig(coeffMask*1e6)

V2 =

    0.7156    0.2647    0.1741
   -0.6049   -0.8351   -0.6963
   -0.3492    0.4822    0.6963


l =

   1.0e+06 *

   -3.7321         0         0
         0   -0.2679         0
         0         0   -0.0000

V1==V2

ans =

     0     1     0
     0     0     0
     1     0     0

[matCoeff]=PiecePolyBasis();
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',105,1)">105 </a>end
if system_dependent('IsDebugMode')==1, dbcont; end
help single
 <strong>single</strong> Convert to single precision.
    Y = <strong>single</strong>(X) converts the vector X to single precision. X can be any
    numeric object (such as a DOUBLE). If X is already single precision,
    <strong>single</strong> has no effect.  Single precision quantities require less storage
    than double precision quantities, but have less precision and a
    smaller range. REALMAX('single') gives the uper bound for <strong>single</strong> while
    REALMIN('single') is the smallest positive normalized <strong>single</strong> value.
 
    Most operations that are defined on DOUBLE arrays are also defined for
    <strong>single</strong> arrays. When <strong>single</strong> and DOUBLE arrays interact in arithmetic,
    the type of the result is <strong>single</strong>.
 
    You can define or overload your own methods for the <strong>single</strong> class (as you
    can for any object) by placing the appropriately named method in an @single
    directory within a directory on your path. 
    See DATATYPES for the names of the methods you can overload.
 
    A particularly efficient way to initialize a large <strong>single</strong> array is:
 
        S = zeros(1000,1000,'single')
 
    which creates a 1000x1000 element <strong>single</strong> array, all of whose entries are
    zero. You can also use ONES and EYE in a similar manner.
 
    Example:
       X = pi * ones(5,6,'single')
 
    See also <a href="matlab:help double">double</a>, <a href="matlab:help datatypes">datatypes</a>, <a href="matlab:help uint8">uint8</a>, <a href="matlab:help uint16">uint16</a>, <a href="matlab:help uint32">uint32</a>, <a href="matlab:help uint64">uint64</a>, <a href="matlab:help int8">int8</a>, <a href="matlab:help int16">int16</a>,
    <a href="matlab:help int32">int32</a>, <a href="matlab:help int64">int64</a>, <a href="matlab:help realmin">realmin</a>, <a href="matlab:help realmax">realmax</a>, <a href="matlab:help eye">eye</a>, <a href="matlab:help ones">ones</a>, <a href="matlab:help zeros">zeros</a>, <a href="matlab:help isfloat">isfloat</a>, <a href="matlab:help isnumeric">isnumeric</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('single')">Other functions named single</a>

    Reference page in Help browser
       <a href="matlab:doc single">doc single</a>

PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end

ans =

   1.0e+10 *

  Columns 1 through 10

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000    0.0000   -0.0000    0.0000   -0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 20

    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

  Columns 21 through 30

    0.0000   -0.0000    0.0001   -0.0004    0.0014   -0.0054    0.0202   -0.0753    0.2810   -1.0488
   -0.0000    0.0000   -0.0001    0.0003   -0.0012    0.0046   -0.0171    0.0637   -0.2376    0.8866
   -0.0000    0.0000   -0.0001    0.0002   -0.0007    0.0026   -0.0098    0.0367   -0.1372    0.5119

PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000

  Columns 21 through 30

   -0.0000    0.0001   -0.0003    0.0013   -0.0047    0.0175   -0.0653    0.2437   -0.9095    3.3942
    0.0000   -0.0001    0.0003   -0.0011    0.0040   -0.0148    0.0552   -0.2060    0.7688   -2.8691
    0.0000   -0.0000    0.0002   -0.0006    0.0023   -0.0085    0.0319   -0.1189    0.4439   -1.6565

clc
help souble

souble not found.

Use the Help browser search field to <a href="matlab:docsearch souble">search the documentation</a>, or
type "<a href="matlab:help help">help help</a>" for help command options, such as help for methods.

help double
 <strong>double</strong> Convert to double precision.
    <strong>double</strong>(X) returns the double precision value for X.
    If X is already a double precision array, <strong>double</strong> has
    no effect.
 
    <strong>double</strong> is called for the expressions in FOR, IF, and WHILE loops
    if the expression isn't already double precision.  <strong>double</strong> should
    be overloaded for all objects where it makes sense to convert it
    into a double precision value.
 
    See also <a href="matlab:help single">single</a>, <a href="matlab:help datatypes">datatypes</a>, <a href="matlab:help isfloat">isfloat</a>, <a href="matlab:help isnumeric">isnumeric</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('double')">Other functions named double</a>

    Reference page in Help browser
       <a href="matlab:doc double">doc double</a>

help datatypes
  Data types and structures.
 
  Data types (classes)
    <a href="matlab:help double">double</a>          - Convert to double precision.
    <a href="matlab:help logical">logical</a>         - Convert numeric values to logical.
    <a href="matlab:help cell">cell</a>            - Create cell array.
    <a href="matlab:help struct">struct</a>          - Create or convert to structure array.
    <a href="matlab:help table">table</a>           - Create a table from workspace variables.
    <a href="matlab:help single">single</a>          - Convert to single precision.
    <a href="matlab:help uint8">uint8</a>           - Convert to unsigned 8-bit integer.
    <a href="matlab:help uint16">uint16</a>          - Convert to unsigned 16-bit integer.
    <a href="matlab:help uint32">uint32</a>          - Convert to unsigned 32-bit integer.
    <a href="matlab:help uint64">uint64</a>          - Convert to unsigned 64-bit integer.
    <a href="matlab:help int8">int8</a>            - Convert to signed 8-bit integer.
    <a href="matlab:help int16">int16</a>           - Convert to signed 16-bit integer.
    <a href="matlab:help int32">int32</a>           - Convert to signed 32-bit integer.
    <a href="matlab:help int64">int64</a>           - Convert to signed 64-bit integer.
    <a href="matlab:help categorical">categorical</a>     - Create a categorical array.
    <a href="matlab:help inline">inline</a>          - Construct INLINE object.
    <a href="matlab:help function_handle">function_handle</a> - Function handle array.
    <a href="matlab:help javaArray">javaArray</a>       - Construct a Java Array object.
    <a href="matlab:help javaMethod">javaMethod</a>      - Invoke a Java method.
    <a href="matlab:help javaObject">javaObject</a>      - Invoke a Java object constructor.
    <a href="matlab:help javaMethodEDT">javaMethodEDT</a>   - Invoke a Java method on the Swing Event Dispatch Thread.
    <a href="matlab:help javaObjectEDT">javaObjectEDT</a>   - Invoke a Java object constructor on the Swing Event Dispatch Thread.
 
    <a href="matlab:help cast">cast</a>            - Cast a variable to a different data type or class.
 
  Class determination functions.
    <a href="matlab:help isnumeric">isnumeric</a>       - True for numeric arrays.
    <a href="matlab:help isfloat">isfloat</a>         - True for floating point arrays, both single and double.
    <a href="matlab:help isinteger">isinteger</a>       - True for arrays of integer data type.
    <a href="matlab:help islogical">islogical</a>       - True for logical array.
 
    <a href="matlab:help iscom">iscom</a>           - true for COM/ActiveX objects.
    <a href="matlab:help isinterface">isinterface</a>     - true for COM Interfaces.
 
  Cell array functions.
    <a href="matlab:help cell">cell</a>            - Create cell array.
    <a href="matlab:help celldisp">celldisp</a>        - Display cell array contents.
    <a href="matlab:help cellplot">cellplot</a>        - Display graphical depiction of cell array.
    <a href="matlab:help cell2mat">cell2mat</a>        - Convert the contents of a cell array into a single matrix.
    <a href="matlab:help mat2cell">mat2cell</a>        - Break matrix up into a cell array of matrices.
    <a href="matlab:help num2cell">num2cell</a>        - Convert numeric array into cell array.
    <a href="matlab:help deal">deal</a>            - Deal inputs to outputs.
    <a href="matlab:help cell2struct">cell2struct</a>     - Convert cell array into structure array.
    <a href="matlab:help struct2cell">struct2cell</a>     - Convert structure array into cell array.
    <a href="matlab:help iscell">iscell</a>          - True for cell array.
 
  Array functions.
    <a href="matlab:help arrayfun">arrayfun</a>        - Apply a function to each element of an array.
    <a href="matlab:help cellfun">cellfun</a>         - Apply a function to each cell of a cell array.
    <a href="matlab:help structfun">structfun</a>       - Apply a function to each field of a scalar structure.
 
  Structure functions.
    <a href="matlab:help struct">struct</a>          - Create or convert to structure array.
    <a href="matlab:help fieldnames">fieldnames</a>      - Get structure field names.
    <a href="matlab:help getfield">getfield</a>        - Get structure field contents.
    <a href="matlab:help setfield">setfield</a>        - Set structure field contents.
    <a href="matlab:help rmfield">rmfield</a>         - Remove fields from a structure array.
    <a href="matlab:help isfield">isfield</a>         - True if field is in structure array.
    <a href="matlab:help isstruct">isstruct</a>        - True for structures.
    <a href="matlab:help orderfields">orderfields</a>     - Order fields of a structure array.
 
  Table functions.
    <a href="matlab:help table">table</a>           - Create a table from workspace variables.
    <a href="matlab:help array2table">array2table</a>     - Convert matrix to table.
    <a href="matlab:help cell2table">cell2table</a>      - Convert cell array to table.
    <a href="matlab:help struct2table">struct2table</a>    - Convert structure array to table.
    <a href="matlab:help table2array">table2array</a>     - Convert table to a homogeneous array.
    <a href="matlab:help table2cell">table2cell</a>      - Convert table to cell array.
    <a href="matlab:help table2struct">table2struct</a>    - Convert table to structure array.
    <a href="matlab:help istable">istable</a>         - True for tables.
 
  Categorical functions.
    <a href="matlab:help categorical">categorical</a>     - Create a categorical array.
    <a href="matlab:help iscategorical">iscategorical</a>   - True for categorical arrays.
 
  Function handle functions.
    @               - Create function_handle; use "help function_handle".
    <a href="matlab:help func2str">func2str</a>        - Construct a string from a function handle.
    <a href="matlab:help str2func">str2func</a>        - Construct a function_handle from a function name string.
    <a href="matlab:help functions">functions</a>       - List functions associated with a function_handle.
 
  Byte manipulation functions.
    <a href="matlab:help swapbytes">swapbytes</a>       - Swap byte ordering, changing endianness.
    <a href="matlab:help typecast">typecast</a>        - Convert datatypes without changing underlying data.
 
  Object oriented programming functions.
    <a href="matlab:help class">class</a>           - Create object or return object class.
    <a href="matlab:help classdef">classdef</a>        - Define a new MATLAB class.
    <a href="matlab:help struct">struct</a>          - Convert object to structure array.
    <a href="matlab:help methods">methods</a>         - Display class method names.
    <a href="matlab:help methodsview">methodsview</a>     - View names and properties of class methods.
    <a href="matlab:help properties">properties</a>      - Display class property names.
    <a href="matlab:help events">events</a>          - Display class event names.
    <a href="matlab:help enumeration">enumeration</a>     - Display class enumerated value names.
    <a href="matlab:help superclasses">superclasses</a>    - Display names of the superclasses of a given class.
    <a href="matlab:help isa">isa</a>             - True if object is a given class.
    <a href="matlab:help isjava">isjava</a>          - True for Java object arrays
    <a href="matlab:help isobject">isobject</a>        - True for MATLAB objects.
    <a href="matlab:help inferiorto">inferiorto</a>      - Inferior class relationship.
    <a href="matlab:help superiorto">superiorto</a>      - Superior class relationship.
    <a href="matlab:help substruct">substruct</a>       - Create structure argument for SUBSREF or SUBSASGN.
    <a href="matlab:help ismethod">ismethod</a>        - True if method of an object.
    <a href="matlab:help isprop">isprop</a>          - Returns true if the property exists
    <a href="matlab:help metaclass">metaclass</a>       - Metaclass for MATLAB class
 
    <a href="matlab:help loadobj">loadobj</a>         - Called when loading an object from a .MAT file.
    <a href="matlab:help saveobj">saveobj</a>         - Called when saving an object to a .MAT file.

PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0001
    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

  Columns 21 through 30

    0.0002   -0.0007    0.0027   -0.0101    0.0375   -0.1401    0.5227   -1.9508    7.2805  -27.1713
   -0.0002    0.0006   -0.0023    0.0085   -0.0317    0.1184   -0.4419    1.6490   -6.1542   22.9679
   -0.0001    0.0004   -0.0013    0.0049   -0.0183    0.0684   -0.2551    0.9521   -3.5531   13.2605

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000

  Columns 21 through 30

   -0.0000    0.0001   -0.0003    0.0013   -0.0047    0.0175   -0.0653    0.2437   -0.9095    3.3942
    0.0000   -0.0001    0.0003   -0.0011    0.0040   -0.0148    0.0552   -0.2060    0.7688   -2.8691
    0.0000   -0.0000    0.0002   -0.0006    0.0023   -0.0085    0.0319   -0.1189    0.4439   -1.6565

clc
help vpa
 <strong>vpa</strong>    Variable precision arithmetic.
    R = <strong>vpa</strong>(S) numerically evaluates each element of the double matrix
    S using variable precision floating point arithmetic with D decimal
    digit accuracy, where D is the current setting of DIGITS.
    The resulting R is a SYM.
 
    <strong>vpa</strong>(S,D) uses D digits, instead of the current setting of DIGITS.
    D is an integer or the SYM representation of a number.
 
    It is important to avoid the evaluation of an expression using double
    precision floating point arithmetic before it is passed to <strong>vpa</strong>.
    For example,
       phi = vpa((1+sqrt(5))/2)
    first computes a 16-digit approximation to the golden ratio, then
    converts that approximation to one with d digits, where d is the current
    setting of DIGITS.  To get full precision, use unevaluated string or
    symbolic arguments,
       phi = vpa('(1+sqrt(5))/2')
    or
       s = sym('sqrt(5)')
       phi = vpa((1+s)/2);
 
    Additional examples:
       vpa(pi,780) shows six consecutive 9's near digit 770 in the
          decimal expansion of pi.
 
       vpa(hilb(2),5) returns
 
          [    1., .50000]
          [.50000, .33333]
 
    See also <a href="matlab:help double">double</a>, <a href="matlab:help digits">digits</a>, <a href="matlab:help subs">subs</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('vpa')">Other functions named vpa</a>

    Reference page in Help browser
       <a href="matlab:doc vpa">doc vpa</a>

PiecePolyBasis

ans =

   1.0e+10 *

  Columns 1 through 10

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000    0.0000   -0.0000    0.0000   -0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 20

    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

  Columns 21 through 30

    0.0000   -0.0000    0.0001   -0.0004    0.0014   -0.0054    0.0202   -0.0753    0.2810   -1.0488
   -0.0000    0.0000   -0.0001    0.0003   -0.0012    0.0046   -0.0171    0.0637   -0.2376    0.8866
   -0.0000    0.0000   -0.0001    0.0002   -0.0007    0.0026   -0.0098    0.0367   -0.1372    0.5119

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000

  Columns 21 through 30

   -0.0000    0.0001   -0.0003    0.0013   -0.0047    0.0175   -0.0653    0.2437   -0.9095    3.3942
    0.0000   -0.0001    0.0003   -0.0011    0.0040   -0.0148    0.0552   -0.2060    0.7688   -2.8691
    0.0000   -0.0000    0.0002   -0.0006    0.0023   -0.0085    0.0319   -0.1189    0.4439   -1.6565

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

clc
close all
PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2049    0.1299   -0.0348    0.0093   -0.0025    0.0007   -0.0002    0.0000   -0.0000    0.0000
    0.4098   -0.4098    0.1098   -0.0294    0.0079   -0.0021    0.0006   -0.0002    0.0000   -0.0000
    0.2366    0.2366   -0.0634    0.0170   -0.0046    0.0012   -0.0003    0.0001   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.1025    0.0650   -0.0174    0.0047   -0.0012    0.0003   -0.0001    0.0000   -0.0000    0.0000
    0.2049   -0.2049    0.0549   -0.0147    0.0039   -0.0011    0.0003   -0.0001    0.0000   -0.0000
    0.1183    0.1183   -0.0317    0.0085   -0.0023    0.0006   -0.0002    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.1025    0.0650   -0.0174    0.0047   -0.0012    0.0003   -0.0001    0.0000   -0.0000    0.0000
    0.2049   -0.2049    0.0549   -0.0147    0.0039   -0.0011    0.0003   -0.0001    0.0000   -0.0000
    0.1183    0.1183   -0.0317    0.0085   -0.0023    0.0006   -0.0002    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.1025    0.0650   -0.0174    0.0047   -0.0012    0.0003   -0.0001    0.0000   -0.0000    0.0000
    0.2049   -0.2049    0.0549   -0.0147    0.0039   -0.0011    0.0003   -0.0001    0.0000   -0.0000
    0.1183    0.1183   -0.0317    0.0085   -0.0023    0.0006   -0.0002    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.1025    0.0650   -0.0174    0.0047   -0.0012    0.0003   -0.0001    0.0000   -0.0000    0.0000
    0.2049   -0.2049    0.0549   -0.0147    0.0039   -0.0011    0.0003   -0.0001    0.0000   -0.0000
    0.1183    0.1183   -0.0317    0.0085   -0.0023    0.0006   -0.0002    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

clc
PiecePolyBasis

ans =

   1.0e+05 *

  Columns 1 through 10

    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0001    0.0004   -0.0015    0.0057   -0.0212
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0001   -0.0003    0.0013   -0.0048    0.0179
    0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0001   -0.0002    0.0007   -0.0028    0.0103

  Columns 11 through 14

    0.0790   -0.2948    1.1004   -4.1067
   -0.0668    0.2492   -0.9302    3.4714
   -0.0386    0.1439   -0.5370    2.0042

PiecePolyBasis

ans =

   1.0e+05 *

  Columns 1 through 10

   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0001    0.0003   -0.0012    0.0045   -0.0167
    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0001   -0.0003    0.0010   -0.0038    0.0141
    0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0002    0.0006   -0.0022    0.0081

  Columns 11 through 14

    0.0623   -0.2325    0.8678   -3.2389
   -0.0527    0.1966   -0.7336    2.7378
   -0.0304    0.1135   -0.4235    1.5807

PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',106,1)">106 </a>end
l

l =

   -3.7321         0         0
         0   -0.2679         0
         0         0    0.0000

l
{Undefined function or variable 'l'.
} 
PiecePolyBasis

ans =

  Columns 1 through 10

   -0.1025    0.0650   -0.0174    0.0047   -0.0012    0.0003   -0.0001    0.0000   -0.0000    0.0000
    0.2049   -0.2049    0.0549   -0.0147    0.0039   -0.0011    0.0003   -0.0001    0.0000   -0.0000
    0.1183    0.1183   -0.0317    0.0085   -0.0023    0.0006   -0.0002    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

   1.0e+06 *

  Columns 1 through 10

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0001    0.0004   -0.0014    0.0053
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0001   -0.0003    0.0012   -0.0045
   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0002    0.0007   -0.0026

  Columns 11 through 14

   -0.0197    0.0734   -0.2738    1.0218
    0.0166   -0.0620    0.2314   -0.8637
    0.0096   -0.0358    0.1336   -0.4987

PiecePolyBasis

ans =

   1.0e+05 *

  Columns 1 through 10

   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0001    0.0003   -0.0010    0.0038   -0.0141
    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0001   -0.0002    0.0009   -0.0032    0.0119
    0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0001    0.0005   -0.0018    0.0069

  Columns 11 through 14

    0.0527   -0.1966    0.7336   -2.7378
   -0.0445    0.1662   -0.6201    2.3143
   -0.0257    0.0959   -0.3580    1.3361

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

clc
close all
PiecePolyBasis

ans =

   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN

PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',93,1)">93  </a>    [V,l]=eig(vpa(coeffMask,30));
vpa(coeffMask,30)
 
ans =
 
[ -6.0, -2.25, -0.75]
[  4.0,   1.0,     0]
[  4.0,   2.0,   1.0]
 
if system_dependent('IsDebugMode')==1, dbstep; end
PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbstep out; end
if system_dependent('IsDebugMode')==1, dbquit; end

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000

  Columns 21 through 30

    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0001    0.0004   -0.0014    0.0052   -0.0194
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0001   -0.0003    0.0012   -0.0044    0.0164
   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0002    0.0007   -0.0025    0.0095

PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbquit; end
PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
PiecePolyBasis
 
ans =
 
[ -0.02745190528383289850727923780647,  0.01740381056766579701455847561294, -0.0046633369868302895509546646452915,  0.0012495373796553611892601829682256, -0.00033481253179115520608606722761073, 0.000089712747509259635084085942217381,  -0.00002403845824588333425027654125879, 0.0000064410854742737019170202228177794, -0.0000017258836512114734178043500123273,  0.0000004624491305721917541971772315299, -0.00000012391287107729359898435891379228, 0.000000033202353736982641740258423639214, -0.0000000088965438706369679766747807645773,  0.0000000023838217455652301664406994190954, -0.00000000063874311162395268908801691180424,  0.00000000017115070093058058991136822812157, -0.000000000045859692098369670557456000682049,  0.000000000012288067462898092318455774606622, -0.0000000000032925777532226987163670977444399, 0.00000000000088224354999270254701261637113765, -0.00000000000023639644674811147168336774011067, 0.000000000000063342236999743339720854589305025, -0.000000000000016972501250861887200050617109431, 0.0000000000000045477680037042090793478791327001,  -0.000000000000001218570763954949117340899421369, 0.00000000000000032651505211558739001571855277591, -0.00000000000000008748944450740044272197478973463,  0.000000000000000023442725914014380872180606162612, -0.0000000000000000062814591486570807667476349158199,  0.0000000000000000016831106806139421948099335006672]
[  0.05490381056766579701455847561294, -0.05490381056766579701455847561294,   0.014711431702997391043675426838821, -0.0039419162443237671601432317423447,   0.0010562332742976775968975001305575, -0.00028301685286694322744676877988541,  0.000075834137170095312889574988984114, -0.000020319695813438024111531176051046,  0.0000054446460836567835565497152200711, -0.0000014588885211891101146676848292381,  0.00000039090800109965690212102409688145, -0.00000010474348320951749381641155828766,   0.000000028065931738413073144622136269194, -0.0000000075202437441347987620769867891151,   0.0000000020150432381261219036858108872664, -0.00000000053992920836968885266625675995054,   0.00000000014467359535263350697921615253575, -0.000000000038765173040845175250607850192447,   0.000000000010387096810747194023215248234041, -0.0000000000027832142021436008422531427437184,  0.00000000000074575999782720934579732274083222, -0.00000000000019982578916523654093614821961046,  0.000000000000053543158833736817947270137609638, -0.000000000000014346846169710730852932330828088,  0.0000000000000038442258451061054644591857027127, -0.0000000000000010300572107136910049044119827633,  0.00000000000000027600299774865855515846222834036, -0.000000000000000073954780280943215729436930598162,   0.000000000000000019816123375114307759285494052288, -0.0000000000000000053097132195140153077050456109914]
[ 0.031698729810778067661813841462353, 0.031698729810778067661813841462353,  -0.008493649053890338309069207311766,  0.0022758664047832855744629877847106, -0.00060981656524280398878274382707655,  0.00016339985618793038066798752359557, -0.000043782859508917533889206267305727,  0.000011731581847739754888837545627341, -0.0000031434678820414856661439152036347, 0.00000084228968042618777573811518719828, -0.00000022569083966326543680854554515841, 0.000000060473678226873971496066993435376,  -0.000000016203873244230449175722428583091,  0.0000000043418147500478252068227208969879,  -0.0000000011633857559608516515684550048608,  0.00000000031172827379558139945109912245511, -0.000000000083527339221473946235941484959682,  0.000000000022381083090314385492666817383618, -0.0000000000059969931397835957347257845747881,  0.0000000000016068894688199974462363209155349, -0.00000000000043056473549639405021949908735132,  0.00000000000011536947316557875464167543387043, -0.000000000000030913157165920968347202648130396, 0.0000000000000082831554981051187471351586511542, -0.0000000000000022194648264995066413379864742207, 0.00000000000000059470380789290781821678724572873, -0.00000000000000015935040507212463152916250869418,  0.000000000000000042697812395590707899862789048012,  -0.000000000000000011440844510238200070288647497862,  0.0000000000000000030655656453620923812918009434351]
 
PiecePolyBasis
 
ans =
 
[ -0.02745190528383289850727923780647,  0.01740381056766579701455847561294, -0.0046633369868302895509546646452915,  0.0012495373796553611892601829682256, -0.00033481253179115520608606722761073, 0.000089712747509259635084085942217381,  -0.00002403845824588333425027654125879, 0.0000064410854742737019170202228177794, -0.0000017258836512114734178043500123273,  0.0000004624491305721917541971772315299, -0.00000012391287107729359898435891379228, 0.000000033202353736982641740258423639214, -0.0000000088965438706369679766747807645773,  0.0000000023838217455652301664406994190954, -0.00000000063874311162395268908801691180424,  0.00000000017115070093058058991136822812157, -0.000000000045859692098369670557456000682049,  0.000000000012288067462898092318455774606622, -0.0000000000032925777532226987163670977444399, 0.00000000000088224354999270254701261637113765, -0.00000000000023639644674811147168336774011067, 0.000000000000063342236999743339720854589305025, -0.000000000000016972501250861887200050617109431, 0.0000000000000045477680037042090793478791327001,  -0.000000000000001218570763954949117340899421369, 0.00000000000000032651505211558739001571855277591, -0.00000000000000008748944450740044272197478973463,  0.000000000000000023442725914014380872180606162612, -0.0000000000000000062814591486570807667476349158199,  0.0000000000000000016831106806139421948099335006672]
[  0.05490381056766579701455847561294, -0.05490381056766579701455847561294,   0.014711431702997391043675426838821, -0.0039419162443237671601432317423447,   0.0010562332742976775968975001305575, -0.00028301685286694322744676877988541,  0.000075834137170095312889574988984114, -0.000020319695813438024111531176051046,  0.0000054446460836567835565497152200711, -0.0000014588885211891101146676848292381,  0.00000039090800109965690212102409688145, -0.00000010474348320951749381641155828766,   0.000000028065931738413073144622136269194, -0.0000000075202437441347987620769867891151,   0.0000000020150432381261219036858108872664, -0.00000000053992920836968885266625675995054,   0.00000000014467359535263350697921615253575, -0.000000000038765173040845175250607850192447,   0.000000000010387096810747194023215248234041, -0.0000000000027832142021436008422531427437184,  0.00000000000074575999782720934579732274083222, -0.00000000000019982578916523654093614821961046,  0.000000000000053543158833736817947270137609638, -0.000000000000014346846169710730852932330828088,  0.0000000000000038442258451061054644591857027127, -0.0000000000000010300572107136910049044119827633,  0.00000000000000027600299774865855515846222834036, -0.000000000000000073954780280943215729436930598162,   0.000000000000000019816123375114307759285494052288, -0.0000000000000000053097132195140153077050456109914]
[ 0.031698729810778067661813841462353, 0.031698729810778067661813841462353,  -0.008493649053890338309069207311766,  0.0022758664047832855744629877847106, -0.00060981656524280398878274382707655,  0.00016339985618793038066798752359557, -0.000043782859508917533889206267305727,  0.000011731581847739754888837545627341, -0.0000031434678820414856661439152036347, 0.00000084228968042618777573811518719828, -0.00000022569083966326543680854554515841, 0.000000060473678226873971496066993435376,  -0.000000016203873244230449175722428583091,  0.0000000043418147500478252068227208969879,  -0.0000000011633857559608516515684550048608,  0.00000000031172827379558139945109912245511, -0.000000000083527339221473946235941484959682,  0.000000000022381083090314385492666817383618, -0.0000000000059969931397835957347257845747881,  0.0000000000016068894688199974462363209155349, -0.00000000000043056473549639405021949908735132,  0.00000000000011536947316557875464167543387043, -0.000000000000030913157165920968347202648130396, 0.0000000000000082831554981051187471351586511542, -0.0000000000000022194648264995066413379864742207, 0.00000000000000059470380789290781821678724572873, -0.00000000000000015935040507212463152916250869418,  0.000000000000000042697812395590707899862789048012,  -0.000000000000000011440844510238200070288647497862,  0.0000000000000000030655656453620923812918009434351]
 
PiecePolyBasis
 
ans =
 
[ -0.02745190528383289850727923780647,  0.01740381056766579701455847561294, -0.0046633369868302895509546646452915,  0.0012495373796553611892601829682256, -0.00033481253179115520608606722761073, 0.000089712747509259635084085942217381,  -0.00002403845824588333425027654125879, 0.0000064410854742737019170202228177794, -0.0000017258836512114734178043500123273,  0.0000004624491305721917541971772315299, -0.00000012391287107729359898435891379228, 0.000000033202353736982641740258423639214, -0.0000000088965438706369679766747807645773,  0.0000000023838217455652301664406994190954, -0.00000000063874311162395268908801691180424,  0.00000000017115070093058058991136822812157, -0.000000000045859692098369670557456000682049,  0.000000000012288067462898092318455774606622, -0.0000000000032925777532226987163670977444399, 0.00000000000088224354999270254701261637113765, -0.00000000000023639644674811147168336774011067, 0.000000000000063342236999743339720854589305025, -0.000000000000016972501250861887200050617109431, 0.0000000000000045477680037042090793478791327001,  -0.000000000000001218570763954949117340899421369, 0.00000000000000032651505211558739001571855277591, -0.00000000000000008748944450740044272197478973463,  0.000000000000000023442725914014380872180606162612, -0.0000000000000000062814591486570807667476349158199,  0.0000000000000000016831106806139421948099335006672]
[  0.05490381056766579701455847561294, -0.05490381056766579701455847561294,   0.014711431702997391043675426838821, -0.0039419162443237671601432317423447,   0.0010562332742976775968975001305575, -0.00028301685286694322744676877988541,  0.000075834137170095312889574988984114, -0.000020319695813438024111531176051046,  0.0000054446460836567835565497152200711, -0.0000014588885211891101146676848292381,  0.00000039090800109965690212102409688145, -0.00000010474348320951749381641155828766,   0.000000028065931738413073144622136269194, -0.0000000075202437441347987620769867891151,   0.0000000020150432381261219036858108872664, -0.00000000053992920836968885266625675995054,   0.00000000014467359535263350697921615253575, -0.000000000038765173040845175250607850192447,   0.000000000010387096810747194023215248234041, -0.0000000000027832142021436008422531427437184,  0.00000000000074575999782720934579732274083222, -0.00000000000019982578916523654093614821961046,  0.000000000000053543158833736817947270137609638, -0.000000000000014346846169710730852932330828088,  0.0000000000000038442258451061054644591857027127, -0.0000000000000010300572107136910049044119827633,  0.00000000000000027600299774865855515846222834036, -0.000000000000000073954780280943215729436930598162,   0.000000000000000019816123375114307759285494052288, -0.0000000000000000053097132195140153077050456109914]
[ 0.031698729810778067661813841462353, 0.031698729810778067661813841462353,  -0.008493649053890338309069207311766,  0.0022758664047832855744629877847106, -0.00060981656524280398878274382707655,  0.00016339985618793038066798752359557, -0.000043782859508917533889206267305727,  0.000011731581847739754888837545627341, -0.0000031434678820414856661439152036347, 0.00000084228968042618777573811518719828, -0.00000022569083966326543680854554515841, 0.000000060473678226873971496066993435376,  -0.000000016203873244230449175722428583091,  0.0000000043418147500478252068227208969879,  -0.0000000011633857559608516515684550048608,  0.00000000031172827379558139945109912245511, -0.000000000083527339221473946235941484959682,  0.000000000022381083090314385492666817383618, -0.0000000000059969931397835957347257845747881,  0.0000000000016068894688199974462363209155349, -0.00000000000043056473549639405021949908735132,  0.00000000000011536947316557875464167543387043, -0.000000000000030913157165920968347202648130396, 0.0000000000000082831554981051187471351586511542, -0.0000000000000022194648264995066413379864742207, 0.00000000000000059470380789290781821678724572873, -0.00000000000000015935040507212463152916250869418,  0.000000000000000042697812395590707899862789048012,  -0.000000000000000011440844510238200070288647497862,  0.0000000000000000030655656453620923812918009434351]
 
clc
close all
clear all
PiecePolyBasis

ans =

  Columns 1 through 18

   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN

  Columns 19 through 30

   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 20

   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000   -0.0000   -0.0000    0.0000   -0.0000    0.0000   -0.0000

  Columns 21 through 30

   -0.0000    0.0000   -0.0001    0.0002   -0.0007    0.0028   -0.0104    0.0388   -0.1449    0.5406
    0.0000   -0.0000    0.0000   -0.0002    0.0006   -0.0024    0.0088   -0.0328    0.1225   -0.4570
    0.0000   -0.0000    0.0000   -0.0001    0.0004   -0.0014    0.0051   -0.0189    0.0707   -0.2639

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

clc
close all
clear
PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

help interp1
 <strong>interp1</strong> 1-D interpolation (table lookup)
 
    Some features of <strong>interp1</strong> will be removed in a future release.
    See the R2012a release notes for details.
 
    Vq = <strong>interp1</strong>(X,V,Xq) interpolates to find Vq, the values of the
    underlying function V=F(X) at the query points Xq. 
 
    X must be a vector. The length of X is equal to N.
    If V is a vector, V must have length N, and Vq is the same size as Xq.
    If V is an array of size [N,D1,D2,...,Dk], then the interpolation is
    performed for each D1-by-D2-by-...-Dk value in V(i,:,:,...,:). If Xq
    is a vector of length M, then Vq has size [M,D1,D2,...,Dk]. If Xq is 
    an array of size [M1,M2,...,Mj], then Vq is of size
    [M1,M2,...,Mj,D1,D2,...,Dk].
 
    Vq = <strong>interp1</strong>(V,Xq) assumes X = 1:N, where N is LENGTH(V)
    for vector V or SIZE(V,1) for array V.
 
    Interpolation is the same operation as "table lookup".  Described in
    "table lookup" terms, the "table" is [X,V] and <strong>interp1</strong> "looks-up"
    the elements of Xq in X, and, based upon their location, returns
    values Vq interpolated within the elements of V.
 
    Vq = <strong>interp1</strong>(X,V,Xq,METHOD) specifies alternate methods.
    The default is linear interpolation. Use an empty matrix [] to specify
    the default. Available methods are:
 
      'nearest'  - nearest neighbor interpolation
      'next'     - next neighbor interpolation
      'previous' - previous neighbor interpolation
      'linear'   - linear interpolation
      'spline'   - piecewise cubic spline interpolation (SPLINE)
      'pchip'    - shape-preserving piecewise cubic interpolation
      'cubic'    - same as 'pchip'
      'v5cubic'  - the cubic interpolation from MATLAB 5, which does not
                   extrapolate and uses 'spline' if X is not equally
                   spaced.
 
    Vq = <strong>interp1</strong>(X,V,Xq,METHOD,'extrap') uses the interpolation algorithm
    specified by METHOD to perform extrapolation for elements of Xq outside
    the interval spanned by X.
 
    Vq = <strong>interp1</strong>(X,V,Xq,METHOD,EXTRAPVAL) replaces the values outside of the
    interval spanned by X with EXTRAPVAL.  NaN and 0 are often used for
    EXTRAPVAL.  The default extrapolation behavior with four input arguments
    is 'extrap' for 'spline' and 'pchip' and EXTRAPVAL = NaN (NaN +NaNi for 
    complex values) for the other methods.
 
    PP = <strong>interp1</strong>(X,V,METHOD,'pp') uses the interpolation algorithm specified
    by METHOD to generate the ppform (piecewise polynomial form) of V. The
    method may be any of the above METHOD except for 'v5cubic'. PP may then
    be evaluated via PPVAL. PPVAL(PP,Xq) is the same as
    <strong>interp1</strong>(X,V,Xq,METHOD,'extrap').
 
    For example, generate a coarse sine curve and interpolate over a
    finer abscissa:
        X = 0:10; V = sin(X); Xq = 0:.25:10;
        Vq = interp1(X,V,Xq); plot(X,V,'o',Xq,Vq,':.')
 
    For a multi-dimensional example, we construct a table of functional
    values:
        X = [1:10]'; V = [ X.^2, X.^3, X.^4 ];
        Xq = [ 1.5, 1.75; 7.5, 7.75]; Vq = interp1(X,V,Xq);
 
    creates 2-by-2 matrices of interpolated function values, one matrix for
    each of the 3 functions. Vq will be of size 2-by-2-by-3.
 
    Class support for inputs X, V, Xq, EXTRAPVAL:
       float: double, single
 
    See also <a href="matlab:help interpft">interpft</a>, <a href="matlab:help spline">spline</a>, <a href="matlab:help pchip">pchip</a>, <a href="matlab:help interp2">interp2</a>, <a href="matlab:help interp3">interp3</a>, <a href="matlab:help interpn">interpn</a>, <a href="matlab:help ppval">ppval</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('interp1')">Other functions named interp1</a>

    Reference page in Help browser
       <a href="matlab:doc interp1">doc interp1</a>

help interp2
 <strong>interp2</strong> 2-D interpolation (table lookup).
 
    Some features of <strong>interp2</strong> will be removed in a future release.
    See the R2012a release notes for details.
 
    Vq = <strong>interp2</strong>(X,Y,V,Xq,Yq) interpolates to find Vq, the values of the
    underlying 2-D function V at the query points in matrices Xq and Yq.
    Matrices X and Y specify the points at which the data V is given.
 
    Xq can be a row vector, in which case it specifies a matrix with
    constant columns. Similarly, Yq can be a column vector and it
    specifies a matrix with constant rows.
 
    Vq = <strong>interp2</strong>(V,Xq,Yq) assumes X=1:N and Y=1:M where [M,N]=SIZE(V).
 
    Vq = <strong>interp2</strong>(V,K) returns the interpolated values on a refined grid 
    formed by repeatedly dividing the intervals K times in each dimension.
 
    Vq = <strong>interp2</strong>(V) is the same as <strong>interp2</strong>(V,1).
 
    Vq = <strong>interp2</strong>(...,METHOD) specifies alternate methods.  The default
    is linear interpolation.  Available methods are:
 
      'nearest' - nearest neighbor interpolation
      'linear'  - bilinear interpolation
      'spline'  - spline interpolation
      'cubic'   - bicubic interpolation as long as the data is
                  uniformly spaced, otherwise the same as 'spline'
 
    For faster interpolation when X and Y are equally spaced and monotonic,
    use the syntax Vq = <strong>interp2</strong>(...,*METHOD).
 
    Vq = <strong>interp2</strong>(...,METHOD,EXTRAPVAL) specificies a method and a scalar
    value for Vq outside of the domain created by X and Y.  Thus, Vq will
    equal EXTRAPVAL for any value of Yq or Xq which is not spanned by Y
    or X respectively. A method must be specified for EXTRAPVAL to be used,
    the default method is 'linear'.
 
    All the interpolation methods require that X and Y be monotonic and
    plaid (as if they were created using MESHGRID).  If you provide two
    monotonic vectors, interp2 changes them to a plaid internally.
    X and Y can be non-uniformly spaced.
 
    For example, to generate a coarse approximation of PEAKS and
    interpolate over a finer mesh:
        [X,Y,V] = peaks(10); [Xq,Yq] = meshgrid(-3:.1:3,-3:.1:3);
        Vq = interp2(X,Y,V,Xq,Yq); mesh(Xq,Yq,Vq)
 
    Class support for inputs X, Y, V, Xq, Yq:
       float: double, single
 
    See also <a href="matlab:help interp1">interp1</a>, <a href="matlab:help interp3">interp3</a>, <a href="matlab:help interpn">interpn</a>, <a href="matlab:help meshgrid">meshgrid</a>, <a href="matlab:help scatteredInterpolant">scatteredInterpolant</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('interp2')">Other functions named interp2</a>

    Reference page in Help browser
       <a href="matlab:doc interp2">doc interp2</a>

help pp

pp not found.

Use the Help browser search field to <a href="matlab:docsearch pp">search the documentation</a>, or
type "<a href="matlab:help help">help help</a>" for help command options, such as help for methods.

doc ppval
1/3.3^14

ans =

   5.5056e-08

1/3.3^16

ans =

   5.0556e-09

log(3)

ans =

    1.0986

log(3.3)

ans =

    1.1939

sqrt(3)

ans =

    1.7321

1+sqrt(5)

ans =

    3.2361

(1+sqrt(5))/2

ans =

    1.6180

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.0275    0.0174   -0.0047    0.0012   -0.0003    0.0001   -0.0000    0.0000   -0.0000    0.0000
    0.0549   -0.0549    0.0147   -0.0039    0.0011   -0.0003    0.0001   -0.0000    0.0000   -0.0000
    0.0317    0.0317   -0.0085    0.0023   -0.0006    0.0002   -0.0000    0.0000   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2745    0.1740   -0.0466    0.0125   -0.0033    0.0009   -0.0002    0.0001   -0.0000    0.0000
    0.5490   -0.5490    0.1471   -0.0394    0.0106   -0.0028    0.0008   -0.0002    0.0001   -0.0000
    0.3170    0.3170   -0.0849    0.0228   -0.0061    0.0016   -0.0004    0.0001   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

clc
close all
PiecePolyBasis

ans =

  Columns 1 through 10

   -0.2745    0.1740   -0.0466    0.0125   -0.0033    0.0009   -0.0002    0.0001   -0.0000    0.0000
    0.5490   -0.5490    0.1471   -0.0394    0.0106   -0.0028    0.0008   -0.0002    0.0001   -0.0000
    0.3170    0.3170   -0.0849    0.0228   -0.0061    0.0016   -0.0004    0.0001   -0.0000    0.0000

  Columns 11 through 14

   -0.0000    0.0000   -0.0000    0.0000
    0.0000   -0.0000    0.0000   -0.0000
   -0.0000    0.0000   -0.0000    0.0000

clc
close all
PiecePolyBasis
 
ans =
 
[ -1236323904068801/4503599627370496, 12540767165978655/72057594037927936, -3360288434590827/72057594037927936, 900386572384653/72057594037927936, -241257854947785/72057594037927936, 64644847406487/72057594037927936, -17321534678163/72057594037927936, 4641291306165/72057594037927936, -1243630546497/72057594037927936, 333230879823/72057594037927936, -89292972795/72057594037927936, 23941011357/72057594037927936, -6471072633/72057594037927936, 1943279175/72057594037927936, -1302044067/72057594037927936, 3264897093/72057594037927936, -11757544305/72057594037927936, 43765280127/72057594037927936, -163303576203/72057594037927936, 609449024685/72057594037927936, -2274492522537/72057594037927936,  8488521065463/72057594037927936, -31679591739315/72057594037927936, 118229845891797/72057594037927936, -441239791827873/72057594037927936, 1646729321419695/72057594037927936, -6145677493850907/72057594037927936, 22935980653983933/72057594037927936, -85598245122084825/72057594037927936, 319456999834355367/72057594037927936]
[  1236323904068801/2251799813685248,  -1236323904068801/2251799813685248,  2650175933428247/18014398509481984, -177528125290645/4503599627370496,  190274071222073/18014398509481984,  -3186486482857/1125899906842624,  13661063680775/18014398509481984,  -915117749347/4503599627370496,   980820308777/18014398509481984,  -32851279715/2251799813685248,  70420642103/18014398509481984,  -4718082673/4503599627370496,  5068680665/18014398509481984,    -43824749/562949953421312,   540887207/18014398509481984,  -190289215/4503599627370496,   2503740233/18014398509481984,  -1156725509/2251799813685248,   34511476055/18014398509481984,  -32198025037/4503599627370496,   480656924537/18014398509481984,   -112114724875/1125899906842624,   6694685467463/18014398509481984,   -6246226567963/4503599627370496,   93244939619945/18014398509481984,   -43499356525991/2251799813685248,  1298734469211767/18014398509481984,  -1211735756159785/4503599627370496,  18089037629344793/18014398509481984,    -1054831367074063/281474976710656]
[ 5710335510557523/18014398509481984,  5710335510557523/18014398509481984,   -765039894282319/9007199254740992, 409983643701029/18014398509481984,   -54927393119739/9007199254740992, 29435501256883/18014398509481984,   -3943609394027/9007199254740992, 2113373895333/18014398509481984,   -283138396639/9007199254740992, 151733277779/18014398509481984,  -20328158919/9007199254740992, 10891993573/18014398509481984,  -1455828227/9007199254740992,  754632243/18014398509481984,    -53436259/9007199254740992, -327142171/18014398509481984,     707720601/9007199254740992, -5334622637/18014398509481984,     9961524673/9007199254740992, -74357574747/18014398509481984,    138753624821/9007199254740992, -1035671423821/18014398509481984,    1932589222821/9007199254740992, -14425042358747/18014398509481984,    26917495494673/9007199254740992, -200914921598637/18014398509481984,    374912347702601/9007199254740992, -2798383860022171/18014398509481984,    5221855372341741/9007199254740992, -38976459118711757/18014398509481984]
 
PiecePolyBasis
 
ans =
 
[ -1236323904068801/4503599627370496, 12540767165978655/72057594037927936, -3360288434590827/72057594037927936, 900386572384653/72057594037927936, -241257854947785/72057594037927936, 64644847406487/72057594037927936, -17321534678163/72057594037927936, 4641291306165/72057594037927936, -1243630546497/72057594037927936, 333230879823/72057594037927936, -89292972795/72057594037927936, 23941011357/72057594037927936, -6471072633/72057594037927936, 1943279175/72057594037927936, -1302044067/72057594037927936, 3264897093/72057594037927936, -11757544305/72057594037927936, 43765280127/72057594037927936, -163303576203/72057594037927936, 609449024685/72057594037927936, -2274492522537/72057594037927936,  8488521065463/72057594037927936, -31679591739315/72057594037927936, 118229845891797/72057594037927936, -441239791827873/72057594037927936, 1646729321419695/72057594037927936, -6145677493850907/72057594037927936, 22935980653983933/72057594037927936, -85598245122084825/72057594037927936, 319456999834355367/72057594037927936]
[  1236323904068801/2251799813685248,  -1236323904068801/2251799813685248,  2650175933428247/18014398509481984, -177528125290645/4503599627370496,  190274071222073/18014398509481984,  -3186486482857/1125899906842624,  13661063680775/18014398509481984,  -915117749347/4503599627370496,   980820308777/18014398509481984,  -32851279715/2251799813685248,  70420642103/18014398509481984,  -4718082673/4503599627370496,  5068680665/18014398509481984,    -43824749/562949953421312,   540887207/18014398509481984,  -190289215/4503599627370496,   2503740233/18014398509481984,  -1156725509/2251799813685248,   34511476055/18014398509481984,  -32198025037/4503599627370496,   480656924537/18014398509481984,   -112114724875/1125899906842624,   6694685467463/18014398509481984,   -6246226567963/4503599627370496,   93244939619945/18014398509481984,   -43499356525991/2251799813685248,  1298734469211767/18014398509481984,  -1211735756159785/4503599627370496,  18089037629344793/18014398509481984,    -1054831367074063/281474976710656]
[ 5710335510557523/18014398509481984,  5710335510557523/18014398509481984,   -765039894282319/9007199254740992, 409983643701029/18014398509481984,   -54927393119739/9007199254740992, 29435501256883/18014398509481984,   -3943609394027/9007199254740992, 2113373895333/18014398509481984,   -283138396639/9007199254740992, 151733277779/18014398509481984,  -20328158919/9007199254740992, 10891993573/18014398509481984,  -1455828227/9007199254740992,  754632243/18014398509481984,    -53436259/9007199254740992, -327142171/18014398509481984,     707720601/9007199254740992, -5334622637/18014398509481984,     9961524673/9007199254740992, -74357574747/18014398509481984,    138753624821/9007199254740992, -1035671423821/18014398509481984,    1932589222821/9007199254740992, -14425042358747/18014398509481984,    26917495494673/9007199254740992, -200914921598637/18014398509481984,    374912347702601/9007199254740992, -2798383860022171/18014398509481984,    5221855372341741/9007199254740992, -38976459118711757/18014398509481984]
 
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',101,1)">101 </a>    eigLim=zeros(3);
max(l)
 
ans =
 
[ 1.3375639255893810297745478768853e-41, 0, 0]
 
l
 
l =
 
[ 1.3375639255893810297745478768853e-41,                                   0,                                  0]
[                                     0, -0.26794919243112270647255365849413,                                  0]
[                                     0,                                   0, -3.7320508075688772935274463415059]
 
max(abs(l))
 
ans =
 
[ 1.3375639255893810297745478768853e-41, 0.26794919243112270647255365849413, 3.7320508075688772935274463415059]
 
[x,y]=max(abs(l))
 
x =
 
[ 1.3375639255893810297745478768853e-41, 0.26794919243112270647255365849413, 3.7320508075688772935274463415059]
 

y =

     1     2     3

[~,x,y]=max(abs(l))
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('sym/max')" style="font-weight:bold">sym/max</a>
Too many output arguments.
} 
[~,x]=max(abs(l))

x =

     1     2     3

l
 
l =
 
[ 1.3375639255893810297745478768853e-41,                                   0,                                  0]
[                                     0, -0.26794919243112270647255365849413,                                  0]
[                                     0,                                   0, -3.7320508075688772935274463415059]
 
(abs(l))
 
ans =
 
[ 1.3375639255893810297745478768853e-41,                                  0,                                 0]
[                                     0, 0.26794919243112270647255365849413,                                 0]
[                                     0,                                  0, 3.7320508075688772935274463415059]
 
PiecePolyBasis
 
ans =
 
[ -0.022977577898839737812977559170125, -0.32904484420232052437404488165975,   1.7141569547081218353091570858091, -6.5275829746301668168625834615768,  24.396174943812545432141176760498, -91.057116800620014911702123580415,  339.83229225866751421466731756116, -1268.2720522340500419469671466642, 4733.2559166775326535732012690958, -17664.751614476080572345837929719,   65925.75054122678963581015044978, -246038.2505504310779708947638694,  918227.25166049752224776890502782, -3426870.7560915590110201808562419,   12789255.77270573852183295451994, -47730152.334731395076311637223517,  178131353.56621984178341359437413, -664795261.93014797205734274027299,  2481049694.1543720464459573667178, -9259403514.6873402137264867265984,  34556564364.594988808459989539676, -128966853943.6926150201134714321,  481310851410.17547127199389618874, -1796276551697.0092700678621133229,  6703795355377.8616089994545571027, -25018904869814.437165929956115088,  93371824123879.887054720369903249, -348468391625705.11105295152349791,  1300501742378940.5571570857240884, -4853538577890057.1175753913728556]
[   0.04595515579767947562595511834025, -0.04595515579767947562595511834025,  -1.3621345326069615731221346449793,  5.4944932862255257681144936982573,  -20.61583861229514149933584014805,  76.968861162955040229228866893942, -287.25960603952501941757962742772,  1072.0695629951450374410896428169,  -4001.01864594105513034677894384,  14932.005020769075483946026132543, -55727.001437135246805437325586332, 207976.00072777191173780327621279, -776177.00147395240014577577926481,  2896732.0051680376888452998408465, -10810751.019198198355235423584121,  40346272.071624755732096394495638, -150574337.26730082457315015439843,  561951076.99757854256050422309808, -2097229970.7230133456688667379939,  7826968805.8944748401149627288775, -29210645252.854886014790984177516, 109015612205.52506921904897398119, -406851803569.24539086140491174723,  1518391602071.4564942265706730077, -5666714604716.5805860448777802837,  21148466816794.865849952940448127, -78927152662462.882813766884012225,  294560143833056.66540511459560077, -1099313422669763.7788066914983909,  4102693546845998.4498216513979627]
[   0.48468161473410684145801496055325,  0.48468161473410684145801496055325, -0.92340807367053420729007480276625,  3.2089506799480299877022842505118, -11.912394646121585743519062199281,  44.440627904538312986373964546611, -165.85011697203166620197679598716,  618.95983998358835182153321940205, -2309.989242962321741084156081621,   8620.997131865698612515091107082, -32173.999284500472708976208346707, 120075.00000613619222338974227975, -448126.00074004429618458276077228,  1672429.0029540409925149413008094, -6241590.0110761196738751824424652,  23293931.041350437702985788469051,  -86934134.15432563113806797143374,  324442605.57595208684928609726591, -1210836288.1494827162590764176299,  4518902547.0219787781870195732537, -16864773899.938432396489001875385, 62940193052.731750807768987928286, -234895998310.98857083458694983776,  876643800191.22253253057881142275, -3271679202453.9015592877282958532,   12210073009624.38370462033437199, -45568612836043.633259193609192107,  170064378334550.14933215410239644, -634688900502156.96406942280039365,  2368691223674077.7069455370991782]
 
PiecePolyBasis
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345]
 
clc
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
clc
close all
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855]
 
help vpa
 <strong>vpa</strong>    Variable precision arithmetic.
    R = <strong>vpa</strong>(S) numerically evaluates each element of the double matrix
    S using variable precision floating point arithmetic with D decimal
    digit accuracy, where D is the current setting of DIGITS.
    The resulting R is a SYM.
 
    <strong>vpa</strong>(S,D) uses D digits, instead of the current setting of DIGITS.
    D is an integer or the SYM representation of a number.
 
    It is important to avoid the evaluation of an expression using double
    precision floating point arithmetic before it is passed to <strong>vpa</strong>.
    For example,
       phi = vpa((1+sqrt(5))/2)
    first computes a 16-digit approximation to the golden ratio, then
    converts that approximation to one with d digits, where d is the current
    setting of DIGITS.  To get full precision, use unevaluated string or
    symbolic arguments,
       phi = vpa('(1+sqrt(5))/2')
    or
       s = sym('sqrt(5)')
       phi = vpa((1+s)/2);
 
    Additional examples:
       vpa(pi,780) shows six consecutive 9's near digit 770 in the
          decimal expansion of pi.
 
       vpa(hilb(2),5) returns
 
          [    1., .50000]
          [.50000, .33333]
 
    See also <a href="matlab:help double">double</a>, <a href="matlab:help digits">digits</a>, <a href="matlab:help subs">subs</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('vpa')">Other functions named vpa</a>

    Reference page in Help browser
       <a href="matlab:doc vpa">doc vpa</a>

doc vpa
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
 
ans =
 
[ -1236323904068801/4503599627370496, 12540767165978655/72057594037927936, -3360288434590827/72057594037927936, 900386572384653/72057594037927936, -241257854947785/72057594037927936, 64644847406487/72057594037927936, -17321534678163/72057594037927936, 4641291306165/72057594037927936, -1243630546497/72057594037927936, 333230879823/72057594037927936, -89292972795/72057594037927936, 23941011357/72057594037927936, -6471072633/72057594037927936, 1943279175/72057594037927936, -1302044067/72057594037927936, 3264897093/72057594037927936, -11757544305/72057594037927936, 43765280127/72057594037927936, -163303576203/72057594037927936, 609449024685/72057594037927936, -2274492522537/72057594037927936,  8488521065463/72057594037927936, -31679591739315/72057594037927936, 118229845891797/72057594037927936, -441239791827873/72057594037927936, 1646729321419695/72057594037927936, -6145677493850907/72057594037927936, 22935980653983933/72057594037927936, -85598245122084825/72057594037927936, 319456999834355367/72057594037927936, -1192229754215336643/72057594037927936, 4449462017026991205/72057594037927936, -16605618313892628177/72057594037927936, 61973011238543521503/72057594037927936, -231286426640281457835/72057594037927936,  863172695322582309837/72057594037927936, -3221404354650047781513/72057594037927936, 12022444723277608816215/72057594037927936, -44868374538460387483347/72057594037927936, 167451053430563941117173/72057594037927936, -624935839183795376985345/72057594037927936, 2332292303304617566824207/72057594037927936, -8704233374034674890311483/72057594037927936, 32484641192834081994421725/72057594037927936, -121234331397301653087375417/72057594037927936, 452452684396372530355079943/72057594037927936, -1688576406188188468332944355/72057594037927936, 6301852940356381342976697477/72057594037927936, -23518835355237336903573845553/72057594037927936,  87773488480592966271318684735/72057594037927936]
[  1236323904068801/2251799813685248,  -1236323904068801/2251799813685248,  2650175933428247/18014398509481984, -177528125290645/4503599627370496,  190274071222073/18014398509481984,  -3186486482857/1125899906842624,  13661063680775/18014398509481984,  -915117749347/4503599627370496,   980820308777/18014398509481984,  -32851279715/2251799813685248,  70420642103/18014398509481984,  -4718082673/4503599627370496,  5068680665/18014398509481984,    -43824749/562949953421312,   540887207/18014398509481984,  -190289215/4503599627370496,   2503740233/18014398509481984,  -1156725509/2251799813685248,   34511476055/18014398509481984,  -32198025037/4503599627370496,   480656924537/18014398509481984,   -112114724875/1125899906842624,   6694685467463/18014398509481984,   -6246226567963/4503599627370496,   93244939619945/18014398509481984,   -43499356525991/2251799813685248,  1298734469211767/18014398509481984,  -1211735756159785/4503599627370496,  18089037629344793/18014398509481984,    -1054831367074063/281474976710656,   251947792341615335/18014398509481984,  -235070490468430327/4503599627370496,   3509180055153269897/18014398509481984,  -1637054782342419785/2251799813685248,   48876572979804163223/18014398509481984,   -45602463415119323653/4503599627370496,   680762841662105015225/18014398509481984,   -158790094561746422893/1125899906842624,   9481803210289666049927/18014398509481984,   -8846642832042680358355/4503599627370496,  132064482102393219683753/18014398509481984,   -61608919635175269662699/2251799813685248,  1839420946223215409522615/18014398509481984,  -1716203106952864870197217/4503599627370496,   25619828765022622513632857/18014398509481984,    -2987953207258719705429455/562949953421312,   356838181764093499781337383/18014398509481984,  -332934556106023742137901743/4503599627370496,   4970114715932286374425090505/18014398509481984,   -2318590079913131316143594381/2251799813685248]
[ 5710335510557523/18014398509481984,  5710335510557523/18014398509481984,   -765039894282319/9007199254740992, 409983643701029/18014398509481984,   -54927393119739/9007199254740992, 29435501256883/18014398509481984,   -3943609394027/9007199254740992, 2113373895333/18014398509481984,   -283138396639/9007199254740992, 151733277779/18014398509481984,  -20328158919/9007199254740992, 10891993573/18014398509481984,  -1455828227/9007199254740992,  754632243/18014398509481984,    -53436259/9007199254740992, -327142171/18014398509481984,     707720601/9007199254740992, -5334622637/18014398509481984,     9961524673/9007199254740992, -74357574747/18014398509481984,    138753624821/9007199254740992, -1035671423821/18014398509481984,    1932589222821/9007199254740992, -14425042358747/18014398509481984,    26917495494673/9007199254740992, -200914921598637/18014398509481984,    374912347702601/9007199254740992, -2798383860022171/18014398509481984,    5221855372341741/9007199254740992, -38976459118711757/18014398509481984,     72731062865081773/9007199254740992, -542872043801942427/18014398509481984,    1013013024738803081/9007199254740992, -7561232154108482221/18014398509481984,    14109451283478161361/9007199254740992, -105314378113716808667/18014398509481984,    196519304943955455973/9007199254740992, -1466840061437926839117/18014398509481984,    2737160817931898222261/9007199254740992, -20430446482017258938971/18014398509481984,    38123732146102619655681/9007199254740992, -284559410686803698306477/18014398509481984,    530995089227504776957273/9007199254740992, -3963401303133234517351707/18014398509481984,     7395807517038964257746141/9007199254740992, -55203058833178479544617421/18014398509481984,    103010310149317994831488701/9007199254740992, -768879422361365479107292187/18014398509481984,    1434748534573412963383095673/9007199254740992, -10709108854225938227957473197/18014398509481984]
 
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',94,1)">94  </a>    coeffMask=[-6, -9/(4*d), -3/(4*d^2);
if system_dependent('IsDebugMode')==1, dbstep; end
coeffMask

coeffMask =

   -6.0000   -2.2500   -0.7500
    4.0000    1.0000         0
    4.0000    2.0000    1.0000

PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbstep; end
coeffMask

coeffMask =

   -6.0000   -2.2500   -0.7500
    4.0000    1.0000         0
    4.0000    2.0000    1.0000

pretty(coeffMask)
{Undefined function 'pretty' for input arguments of type 'double'.
} 
=coeffMasksym(coeffMask)
 =coeffMasksym(coeffMask)
 |
{Error: The expression to the left of the equals sign is not a valid target for an assignment.
} 
coeffMask=sym(coeffMask)
 
coeffMask =
 
[ -6, -9/4, -3/4]
[  4,    1,    0]
[  4,    2,    1]
 
PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('digits', 'C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\digits.m', 42)" style="font-weight:bold">digits</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\digits.m',42,0)">line 42</a>)
The input must be a positive integer larger than 1 and smaller than 2^29 + 1.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vpa', 'C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\vpa.m', 39)" style="font-weight:bold">vpa</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\symbolic\symbolic\vpa.m',39,0)">line 39</a>)
    digits(d);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>GenerateMatCoeff', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 67)" style="font-weight:bold">PiecePolyBasis>GenerateMatCoeff</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',67,0)">line 67</a>)
    matCoeff=vpa(zeros([3,steps]),precision);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 9)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',9,0)">line 9</a>)
    [matCoeff]=GenerateMatCoeff(d,Dv,steps,precision);
} 
2^29+1

ans =

   536870913

PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
clc
PiecePolyBasis

pp = 

      form: 'pp'
    breaks: [1x100 double]
     coefs: [99x3 double]
    pieces: 99
     order: 3
       dim: 1

 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',16,1)">16  </a>end
max(pp.breaks)

ans =

    99

x=linspace(-99,99,5000);
figure, plot(x,ppval(x,pp))
x=linspace(-99,99,50000);
figure, plot(x,ppval(x,pp))
figure, plot(x,ppval(x,pp))
{Undefined function or variable 'x'.
} 
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',27,1)">27  </a>        realCoeff(:,ii+1)=calcMask(e)*matCoeff(:,ii+1);
e

e =

    -1

calcMask(e)

ans =

     1     0     0
    -2     1     0
     1    -1     1

calcMask(e)*matCoeff(:,ii+1)
 
ans =
 
  -0.2745190528383289850727923780647
   1.0980762113533159402911695122588
 -0.50656986040720627860023871957057
 
matCoeff(:,ii+1)
 
ans =
 
 -0.2745190528383289850727923780647
  0.5490381056766579701455847561294
 0.31698729810778067661813841462353
 
PiecePolyBasis
x=linspace(-99,99,50000);
figure, plot(x,ppval(x,pp))
if system_dependent('IsDebugMode')==1, dbquit; end
figure, plot(x,ppval(x,pp))
{Undefined function or variable 'x'.
} 
close all
clc
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',27,1)">27  </a>        realCoeff(:,ii+1)=calcMask(e)*matCoeff(:,ii+1);
calcMask(e)*matCoeff(:,ii+1)
 
ans =
 
 -0.2745190528383289850727923780647
                                  0
 0.59150635094610966169093079268823
 
if system_dependent('IsDebugMode')==1, dbcont; end
x=linspace(-99,99,50000);
figure, plot(x,ppval(x,pp))
if system_dependent('IsDebugMode')==1, dbcont; end
 
ans =
 
[ -0.2745190528383289850727923780647,  0.1740381056766579701455847561294, -0.046633369868302895509546646452915,  0.012495373796553611892601829682256, -0.0033481253179115520608606722761073, 0.00089712747509259635084085942217381,  -0.0002403845824588333425027654125879, 0.000064410854742737019170202228177794, -0.000017258836512114734178043500123273, 0.0000046244913057219175419717723152969,  -0.000001239128710772935989843589137915, 0.00000033202353736982641740258423636315, -0.0000000889654387063696797667478075376,  0.000000023838217455652301664406993787247, -0.000000006387431116239526890880167611386,  0.0000000017115070093058058991136766582976, -0.00000000045859692098369670557453902180453,  0.00000000012288067462898092318447942892046, -0.000000000032925777532226987163378693877332, 0.0000000000088224354999270254690353465888648, -0.0000000000023639644674811147127626924781269, 0.00000000000063342236999743338201542332364282, -0.00000000000016972501250861881529900081644438, 0.000000000000045477680037041879180579942134683, -0.000000000000012185707639548701423318952094357, 0.0000000000000032651505211529265126958662427457, -0.00000000000000087489444506300462746451287662564,  0.00000000000000023442725909909199716218526375683, -0.000000000000000062814591333363361184228178401695,  0.000000000000000016831106234361447574727449849946, -0.0000000000000000045098336040824291146816209980871,  0.000000000000000001208228181968268883999034142403, -0.00000000000000000032307912379064642131451557152471, 0.000000000000000000084088313194316801259028143695868, -0.000000000000000000013274128986620783721597003258767,  -0.0000000000000000000309917972478336663726401306608,   0.00000000000000000013724131797795544921215752590197, -0.00000000000000000051797347466398813047598997294707,   0.0000000000000000019346525806779970726918023658863, -0.0000000000000000072206368480480001602912194905981,  0.000000000000000026947894811514003568473075596506, -0.00000000000000010057094239800801411360108289543,   0.0000000000000003753358747805180528859312559852, -0.0000000000000014007725567240641974301239410454,  0.0000000000000052277543521157387368345645081963, -0.00000000000001951024485173889074990813409174,  0.000000000000072813225054839824262797971858763, -0.00000000000027174265536762040630128375334331,   0.0000000000010141573964156418009423370415145, -0.0000000000037848869302949467974680644127146]
[  0.5490381056766579701455847561294, -0.5490381056766579701455847561294,   0.14711431702997391043675426838821, -0.039419162443237671601432317423447,   0.010562332742976775968975001305575, -0.0028301685286694322744676877988541,  0.00075834137170095312889574988984114, -0.00020319695813438024111531176051046,  0.000054446460836567835565497152200711,  -0.00001458888521189110114667684829238,  0.0000039090800109965690212102409688079, -0.0000010474348320951749381641155828521,  0.0000002806593173841307314462213626005, -0.000000075202437441347987620769867549898,  0.000000020150432381261219036858107599088, -0.0000000053992920836968885266625628464558,   0.0000000014467359535263350697921437867348, -0.00000000038765173040845175250601230048333,   0.00000000010387096810747194023190541519853, -0.000000000027832142021436008421609360310798,  0.0000000000074575999782720934545320260446612, -0.0000000000019982578916523653965187438678465,   0.0000000000005354315883373681315429494267248, -0.00000000000014346846169710712965305383905271,  0.000000000000038442258451060387069265929486027, -0.000000000000010300572107134418624009878891402,   0.0000000000000027600299774772874267735860795809, -0.00000000000000073954780277473108308446542692165,   0.00000000000000019816123362163690556427562810569, -0.000000000000000053097131711816539172637085501094,   0.000000000000000014227293225629251126272713898688,  -0.00000000000000000381204119070046533245377009366,   0.0000000000000000010208715371726102035423664759518, -0.00000000000000000027144495798997548171569581014705,  0.000000000000000000064908294787291723320416764636424, 0.000000000000000000011811778840808588434028751601355,  -0.00000000000000000011215541015052607705653177104184,  0.00000000000000000043680986176129571979209833256602,  -0.0000000000000000016350840368946568021118615592222,   0.000000000000000006103526285817331488655347904323,  -0.00000000000000002277902110637466915250953005807, 0.000000000000000085012558139681345121382772327955, -0.00000000000000031727121145235071133302155925375,  0.0000000000000011840722876697215002107034646871, -0.0000000000000044190179392265352895097922994945, 0.000000000000016491999469236419657828465733291, -0.000000000000061548979937719143341804070633669,  0.00000000000022970392028164015370938781680138, -0.00000000000085726670118884147149574719657187,  0.0000000000031993628844737257322736009694861]
[ 0.31698729810778067661813841462353, 0.31698729810778067661813841462353,  -0.08493649053890338309069207311766,  0.022758664047832855744629877847106, -0.0060981656524280398878274382707655,  0.0016339985618793038066798752359557, -0.00043782859508917533889206267305727,  0.00011731581847739754888837545627341, -0.000031434678820414856661439152036347, 0.0000084228968042618777573811518719838, -0.0000022569083966326543680854554515879, 0.00000060473678226873971496066993436791, -0.0000001620387324423044917572242858837,  0.000000043418147500478252068227209166902, -0.000000011633857559608516515684550783907,  0.0000000031172827379558139945109939687256, -0.00000000083527339221473946235942509099541,  0.00000000022381083090314385492670639525604, -0.000000000059969931397835957347400490028755,  0.000000000016068894688199974462895564858978, -0.0000000000043056473549639405041817694071586,  0.0000000000011536947316557875538315127696561, -0.00000000000030913157165920971114428167146563, 0.000000000000082831554981051290745613916206462, -0.000000000000022194648264995451838173993360217, 0.0000000000000059470380789305166070820572344077,  -0.0000000000000015935040507266145901542355774134,  0.00000000000000042697812397594175353488507524587,  -0.00000000000000011440844517715242398530472357009,    0.0000000000000000306556567326679424063338190345, -0.0000000000000000082141817535193456400305525679056, 0.0000000000000000022010702814094401537883912371228,  -0.0000000000000000005900993721184149751230123805855,  0.00000000000000000015932720706421974670365828521923, -0.000000000000000000047209456138464011691620760291401, 0.000000000000000000029510617489636300062824755946378, -0.000000000000000000070833013820081188559678263494111,  0.00000000000000000025382143779068845417588829803007, -0.00000000000000000094445273734267262814387492862616,  0.0000000000000000035239895115800020583996114164746, -0.000000000000000013151505308977335605454570737272, 0.000000000000000049082031724329340363418671532614, -0.00000000000000018317662158834002584822011539318, 0.00000000000000068362445462903076302946179004012, -0.0000000000000025513211969277830262696270447673, 0.000000000000009521660333082101342049046389029, -0.000000000000035535320135400622341926558511349,  0.00000000000013261962020852038802565718765637, -0.00000000000049494316069868092976070219211412,  0.0000000000018471530225862033310171515808001]
 
PiecePolyBasis
PiecePolyBasis
if system_dependent('IsDebugMode')==1, dbcont; end
PiecePolyBasis
{Undefined function or variable "pp".

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis>CalculatePolyObj', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 38)" style="font-weight:bold">PiecePolyBasis>CalculatePolyObj</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',38,0)">line 38</a>)
figure, plot(x,ppval(x,pp))

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PiecePolyBasis', 'C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m', 15)" style="font-weight:bold">PiecePolyBasis</a> (<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',15,0)">line 15</a>)
    [pp]=CalculatePolyObj(matCoeff,d);
} 
PiecePolyBasis
<a href="matlab: opentoline('C:\Users\ap1949\Local Documents\PhD\Development Work\Snakes Volume Parametrisation\source\PiecePolyBasis.m',41,1)">41  </a>end
x=linspace(-5,99,50000);
x=linspace(-5,5,500);
hold on, plot(x',[x'.^2 x' ones(size(x'))]*allCoeff(:,5))
hold on, plot(x',[x'.^3 x'.^2 (x')]*allCoeff(:,5))
hold on, plot(x',[x'.^3 x'.^2 (x')]*allCoeff(:,6))
hold on, plot(x',[x'.^2 x' ones(size(x'))]*allCoeff(:,6))
ppBounds

ppBounds =

    -9    -7    -5    -3    -1     1     3     5     7     9

for ii=1:9,x=linspace(ppBounds(ii),ppBounds(ii+1),30);plot(x',[x'.^2 x' ones(size(x'))]*allCoeff(:,ii));end